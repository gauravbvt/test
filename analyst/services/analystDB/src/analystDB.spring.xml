<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<beans xsi:schemaLocation="http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd" xmlns="http://www.springframework.org/schema/beans" xmlns:cloud="http://schema.cloudfoundry.org/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <bean class="com.analystdb.AnalystDB" scope="singleton" lazy-init="true" id="analystDB">
        <property name="dataServiceManager">
            <ref bean="analystDBDataService"/>
        </property>
        <property name="taskManager">
            <ref bean="analystDBTaskMgr"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:analystDB.properties</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="true" id="analystDBDataSource">
        <property name="driverClassName" value="${analystDB.driverClassName}"/>
        <property name="url" value="${analystDB.connectionUrl}"/>
        <property name="username" value="${analystDB.username}"/>
        <property name="password" value="${analystDB.password}"/>
    </bean>
    <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" lazy-init="true" id="analystDBTxMgr">
        <property name="sessionFactory">
            <ref bean="analystDBSessionFactory"/>
        </property>
    </bean>
    <bean class="org.springframework.orm.hibernate3.HibernateTemplate" lazy-init="true" id="analystDBHibernateTemplate">
        <property name="sessionFactory">
            <ref bean="analystDBSessionFactory"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.ConfigurationAndSessionFactoryBean" lazy-init="true" id="analystDBSessionFactory">
        <property name="name" value="analystDB"/>
        <property name="dataSource" ref="analystDBDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${analystDB.dialect}</prop>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>com/analystdb/data/Analysis.hbm.xml</value>
                <value>com/analystdb/data/Approach.hbm.xml</value>
                <value>com/analystdb/data/DocumentCategory.hbm.xml</value>
                <value>com/analystdb/data/Documents.hbm.xml</value>
                <value>com/analystdb/data/Flow.hbm.xml</value>
                <value>com/analystdb/data/FlowAttribute.hbm.xml</value>
                <value>com/analystdb/data/Interview.hbm.xml</value>
                <value>com/analystdb/data/Issue.hbm.xml</value>
                <value>com/analystdb/data/IssueApproach.hbm.xml</value>
                <value>com/analystdb/data/IssueAttribute.hbm.xml</value>
                <value>com/analystdb/data/IssueCategory.hbm.xml</value>
                <value>com/analystdb/data/IssueComment.hbm.xml</value>
                <value>com/analystdb/data/IssueCommentFlows.hbm.xml</value>
                <value>com/analystdb/data/IssueIssueCategory.hbm.xml</value>
                <value>com/analystdb/data/Plan.hbm.xml</value>
                <value>com/analystdb/data/Project.hbm.xml</value>
                <value>com/analystdb/data/ProjectFiles.hbm.xml</value>
                <value>com/analystdb/data/Resource.hbm.xml</value>
                <value>com/analystdb/data/ResourceAttribute.hbm.xml</value>
                <value>com/analystdb/data/app-queries.ql.xml</value>
            </list>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.spring.SpringDataServiceManager" lazy-init="true" id="analystDBDataService">
        <constructor-arg>
            <value>analystDB</value>
        </constructor-arg>
        <constructor-arg>
            <ref bean="analystDBHibernateTemplate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="analystDBTxMgr"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="analystDBTaskMgr"/>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="useIndividualCRUDOperations" value="false"/>
                <entry key="refreshEntities" value=""/>
            </map>
        </constructor-arg>
    </bean>
    <bean class="com.wavemaker.runtime.data.DefaultTaskManager" lazy-init="true" id="analystDBTaskMgr"/>
    <bean class="com.wavemaker.runtime.service.events.EventWire" lazy-init="false">
        <property name="serviceWire" ref="analystDBServiceWire"/>
        <property name="eventListener">
            <bean class="com.wavemaker.runtime.data.DataServiceEventListener"/>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.service.reflect.ReflectServiceWire" scope="singleton" lazy-init="false" id="analystDBServiceWire">
        <property name="serviceId" value="analystDB"/>
        <property name="serviceType" ref="DataService"/>
    </bean>
</beans>
