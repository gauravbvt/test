<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
        "
       default-autowire="byName">

    <context:annotation-config/>
    <context:component-scan base-package="com.mindalliance.playbook"/>

    <task:executor id="executor" pool-size="2-10" queue-capacity="100" keep-alive="300"
                   rejection-policy="CALLER_RUNS"/>
    <task:annotation-driven/>

    <bean id="serverUrl" class="java.lang.String">
        <constructor-arg value="localhost:8080"/>
    </bean>
    <bean id="from" class="java.lang.String">
        <constructor-arg value="Test Suite &lt;playbook@example.com&gt;"/>
    </bean>

    <!-- ==================================================================== Hibernate persistence -->
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:playbook"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.search.lucene_version">LUCENE_35</prop>
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                <prop key="hibernate.search.default.indexBase">target/integration-tests/lucene/</prop>
            </props>
        </property>

        <property name="packagesToScan">
            <list>
                <value>com.mindalliance.playbook.model</value>
            </list>
        </property>
    </bean>

    <bean id="entityInterceptor" class="com.mindalliance.playbook.dao.impl.CustomInterceptor"/>

    <!-- ==================================================================== Social -->
    <bean id="registry" class="org.springframework.social.connect.support.ConnectionFactoryRegistry"/>
    <bean id="repository" class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="registry"/>
        <constructor-arg>
            <bean class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText"/>
        </constructor-arg>
    </bean>

    <!-- ==================================================================== Mail -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"/>

    <!-- ==================================================================== Security -->
    <bean name="account" class="com.mindalliance.playbook.dao.impl.AccountDaoImpl" factory-method="currentAccount"
          scope="prototype" autowire="no">
        <constructor-arg ref="accountDao"/>
    </bean>

    <sec:http pattern="/favicon.ico" security="none"/>
    <sec:http pattern="/css/**" security="none"/>
    <sec:http pattern="/images/**" security="none"/>
    <sec:http pattern="/scripts/**" security="none"/>

    <sec:http auto-config='true' create-session="always" disable-url-rewriting="false">
        <sec:intercept-url pattern="/login.html" access="ROLE_ANONYMOUS" requires-channel="https"/>
        <sec:intercept-url pattern="/register.html" access="ROLE_ANONYMOUS" requires-channel="https"/>
        <sec:intercept-url pattern="/social/**" access="ROLE_ANONYMOUS,ROLE_USER" requires-channel="https"/>
        <sec:intercept-url pattern="/jcaptcha.jpg" access="ROLE_ANONYMOUS" requires-channel="https"/>
        <sec:intercept-url pattern="/thanks.html" access="ROLE_ANONYMOUS"/>
        <sec:intercept-url pattern="/reset.html" access="ROLE_ANONYMOUS,ROLE_USER" requires-channel="https"/>
        <sec:intercept-url pattern="/confirm.html" access="ROLE_ANONYMOUS" requires-channel="https"/>
        <sec:intercept-url pattern="/wicket/**" access="ROLE_ANONYMOUS,ROLE_USER"/>
        <sec:intercept-url pattern="/**" access="ROLE_USER"/>

        <sec:form-login login-page="/login.html" login-processing-url="/login.do"
                        authentication-failure-url="/login.html?login_error=1" default-target-url="/plays.html"/>
        <sec:logout logout-url="/logout" logout-success-url="/plays.html"/>

        <sec:remember-me key="playbook" services-alias="rememberMeServices"/>
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="accountDao">
            <sec:password-encoder hash="sha" base64="true"/>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <sec:global-method-security secured-annotations="enabled"/>

    <bean id="runAsManager" class="org.springframework.security.access.intercept.RunAsManagerImpl">
        <property name="key" value="bla"/>
    </bean>
    <bean id="runAsAuthenticationProvider"
          class="org.springframework.security.access.intercept.RunAsImplAuthenticationProvider">
        <property name="key" value="bla"/>
    </bean>

    <bean id="securityInterceptor"
          class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
        <property name="securityMetadataSource">
            <bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource"/>
        </property>
        <property name="validateConfigAttributes" value="false"/>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </constructor-arg>
    </bean>

</beans>
