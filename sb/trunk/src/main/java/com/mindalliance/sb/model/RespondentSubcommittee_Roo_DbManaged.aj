// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mindalliance.sb.model;

import com.mindalliance.sb.model.Respondent;
import com.mindalliance.sb.model.RespondentSubcommittee;
import com.mindalliance.sb.model.Subcommittee;
import com.mindalliance.sb.model.SubcommitteeCapability;
import com.mindalliance.sb.model.SubcommitteeOrganization;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

privileged aspect RespondentSubcommittee_Roo_DbManaged {
    
    @OneToMany(mappedBy = "respondentSubcommittee", cascade = CascadeType.REMOVE)
    private Set<SubcommitteeCapability> RespondentSubcommittee.subcommitteeCapabilities;
    
    @OneToMany(mappedBy = "respondentSubcommittee", cascade = CascadeType.REMOVE)
    private Set<SubcommitteeOrganization> RespondentSubcommittee.subcommitteeOrganizations;
    
    @ManyToOne
    @JoinColumn(name = "respondent", referencedColumnName = "id", nullable = false, insertable = false, updatable = false)
    private Respondent RespondentSubcommittee.respondent;
    
    @ManyToOne
    @JoinColumn(name = "subcommittee", referencedColumnName = "id", nullable = false, insertable = false, updatable = false)
    private Subcommittee RespondentSubcommittee.subcommittee;
    
    @Column(name = "in_charge", columnDefinition = "BIT")
    private Boolean RespondentSubcommittee.inCharge;
    
    public Set<SubcommitteeCapability> RespondentSubcommittee.getSubcommitteeCapabilities() {
        return subcommitteeCapabilities;
    }
    
    public void RespondentSubcommittee.setSubcommitteeCapabilities(Set<SubcommitteeCapability> subcommitteeCapabilities) {
        this.subcommitteeCapabilities = subcommitteeCapabilities;
    }
    
    public Set<SubcommitteeOrganization> RespondentSubcommittee.getSubcommitteeOrganizations() {
        return subcommitteeOrganizations;
    }
    
    public void RespondentSubcommittee.setSubcommitteeOrganizations(Set<SubcommitteeOrganization> subcommitteeOrganizations) {
        this.subcommitteeOrganizations = subcommitteeOrganizations;
    }
    
    public Respondent RespondentSubcommittee.getRespondent() {
        return respondent;
    }
    
    public void RespondentSubcommittee.setRespondent(Respondent respondent) {
        this.respondent = respondent;
    }
    
    public Subcommittee RespondentSubcommittee.getSubcommittee() {
        return subcommittee;
    }
    
    public void RespondentSubcommittee.setSubcommittee(Subcommittee subcommittee) {
        this.subcommittee = subcommittee;
    }
    
    public Boolean RespondentSubcommittee.getInCharge() {
        return inCharge;
    }
    
    public void RespondentSubcommittee.setInCharge(Boolean inCharge) {
        this.inCharge = inCharge;
    }
    
}
