// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mindalliance.sb.model;

import com.mindalliance.sb.model.CoreCapability;
import com.mindalliance.sb.model.CriticalTask;
import com.mindalliance.sb.model.IncidentCapability;
import com.mindalliance.sb.model.MissionArea;
import com.mindalliance.sb.model.OrganizationCapability;
import com.mindalliance.sb.model.SubcommitteeCapability;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

privileged aspect CoreCapability_Roo_DbManaged {
    
    @ManyToMany
    @JoinTable(name = "mission_area_core_capability", joinColumns = { @JoinColumn(name = "core_capability", nullable = false) }, inverseJoinColumns = { @JoinColumn(name = "mission_area", nullable = false) })
    private Set<MissionArea> CoreCapability.missionAreas;
    
    @OneToMany(mappedBy = "coreCapability", cascade = CascadeType.REMOVE)
    private Set<CriticalTask> CoreCapability.criticalTasks;
    
    @OneToMany(mappedBy = "coreCapability", cascade = CascadeType.REMOVE)
    private Set<IncidentCapability> CoreCapability.incidentCapabilities;
    
    @OneToMany(mappedBy = "coreCapability", cascade = CascadeType.REMOVE)
    private Set<OrganizationCapability> CoreCapability.organizationCapabilities;
    
    @OneToMany(mappedBy = "coreCapability", cascade = CascadeType.REMOVE)
    private Set<SubcommitteeCapability> CoreCapability.subcommitteeCapabilities;
    
    @Column(name = "name", length = 127)
    @NotNull
    private String CoreCapability.name;
    
    @Column(name = "description", columnDefinition = "TEXT")
    private String CoreCapability.description;
    
    public Set<MissionArea> CoreCapability.getMissionAreas() {
        return missionAreas;
    }
    
    public void CoreCapability.setMissionAreas(Set<MissionArea> missionAreas) {
        this.missionAreas = missionAreas;
    }
    
    public Set<CriticalTask> CoreCapability.getCriticalTasks() {
        return criticalTasks;
    }
    
    public void CoreCapability.setCriticalTasks(Set<CriticalTask> criticalTasks) {
        this.criticalTasks = criticalTasks;
    }
    
    public Set<IncidentCapability> CoreCapability.getIncidentCapabilities() {
        return incidentCapabilities;
    }
    
    public void CoreCapability.setIncidentCapabilities(Set<IncidentCapability> incidentCapabilities) {
        this.incidentCapabilities = incidentCapabilities;
    }
    
    public Set<OrganizationCapability> CoreCapability.getOrganizationCapabilities() {
        return organizationCapabilities;
    }
    
    public void CoreCapability.setOrganizationCapabilities(Set<OrganizationCapability> organizationCapabilities) {
        this.organizationCapabilities = organizationCapabilities;
    }
    
    public Set<SubcommitteeCapability> CoreCapability.getSubcommitteeCapabilities() {
        return subcommitteeCapabilities;
    }
    
    public void CoreCapability.setSubcommitteeCapabilities(Set<SubcommitteeCapability> subcommitteeCapabilities) {
        this.subcommitteeCapabilities = subcommitteeCapabilities;
    }
    
    public String CoreCapability.getName() {
        return name;
    }
    
    public void CoreCapability.setName(String name) {
        this.name = name;
    }
    
    public String CoreCapability.getDescription() {
        return description;
    }
    
    public void CoreCapability.setDescription(String description) {
        this.description = description;
    }
    
}
