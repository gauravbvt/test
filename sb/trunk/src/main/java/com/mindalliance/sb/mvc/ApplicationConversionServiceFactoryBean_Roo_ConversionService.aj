// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mindalliance.sb.mvc;

import com.mindalliance.sb.model.ContactInfo;
import com.mindalliance.sb.model.CoreCapability;
import com.mindalliance.sb.model.CriticalTask;
import com.mindalliance.sb.model.Discipline;
import com.mindalliance.sb.model.Document;
import com.mindalliance.sb.model.Eoc;
import com.mindalliance.sb.model.IncidentCapability;
import com.mindalliance.sb.model.IncidentCapabilityPK;
import com.mindalliance.sb.model.IncidentSystem;
import com.mindalliance.sb.model.IncidentSystemPK;
import com.mindalliance.sb.model.MissionArea;
import com.mindalliance.sb.model.Organization;
import com.mindalliance.sb.model.OrganizationCapability;
import com.mindalliance.sb.model.OrganizationCapabilityPK;
import com.mindalliance.sb.model.OrganizationIncident;
import com.mindalliance.sb.model.OrganizationIncidentPK;
import com.mindalliance.sb.model.PlanFile;
import com.mindalliance.sb.model.Respondent;
import com.mindalliance.sb.model.RespondentSubcommittee;
import com.mindalliance.sb.model.RespondentSubcommitteePK;
import com.mindalliance.sb.model.SharedInfo;
import com.mindalliance.sb.model.SharedInfoPK;
import com.mindalliance.sb.model.SharingIssue;
import com.mindalliance.sb.model.SharingIssuePK;
import com.mindalliance.sb.model.SituationReport;
import com.mindalliance.sb.model.Subcommittee;
import com.mindalliance.sb.model.SubcommitteeCapability;
import com.mindalliance.sb.model.SubcommitteeCapabilityPK;
import com.mindalliance.sb.model.SystemIssue;
import com.mindalliance.sb.model.SystemIssuePK;
import com.mindalliance.sb.mvc.ApplicationConversionServiceFactoryBean;
import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<ContactInfo, String> ApplicationConversionServiceFactoryBean.getContactInfoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.ContactInfo, java.lang.String>() {
            public String convert(ContactInfo contactInfo) {
                return new StringBuilder().append(contactInfo.getPrefix()).append(' ').append(contactInfo.getFirstName()).append(' ').append(contactInfo.getLastName()).append(' ').append(contactInfo.getEmail()).toString();
            }
        };
    }
    
    public Converter<Integer, ContactInfo> ApplicationConversionServiceFactoryBean.getIdToContactInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.ContactInfo>() {
            public com.mindalliance.sb.model.ContactInfo convert(java.lang.Integer id) {
                return ContactInfo.findContactInfo(id);
            }
        };
    }
    
    public Converter<String, ContactInfo> ApplicationConversionServiceFactoryBean.getStringToContactInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.ContactInfo>() {
            public com.mindalliance.sb.model.ContactInfo convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), ContactInfo.class);
            }
        };
    }
    
    public Converter<CoreCapability, String> ApplicationConversionServiceFactoryBean.getCoreCapabilityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.CoreCapability, java.lang.String>() {
            public String convert(CoreCapability coreCapability) {
                return new StringBuilder().append(coreCapability.getName()).append(' ').append(coreCapability.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CoreCapability> ApplicationConversionServiceFactoryBean.getIdToCoreCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.CoreCapability>() {
            public com.mindalliance.sb.model.CoreCapability convert(java.lang.Integer id) {
                return CoreCapability.findCoreCapability(id);
            }
        };
    }
    
    public Converter<String, CoreCapability> ApplicationConversionServiceFactoryBean.getStringToCoreCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.CoreCapability>() {
            public com.mindalliance.sb.model.CoreCapability convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CoreCapability.class);
            }
        };
    }
    
    public Converter<CriticalTask, String> ApplicationConversionServiceFactoryBean.getCriticalTaskToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.CriticalTask, java.lang.String>() {
            public String convert(CriticalTask criticalTask) {
                return new StringBuilder().append(criticalTask.getName()).append(' ').append(criticalTask.getType()).append(' ').append(criticalTask.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CriticalTask> ApplicationConversionServiceFactoryBean.getIdToCriticalTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.CriticalTask>() {
            public com.mindalliance.sb.model.CriticalTask convert(java.lang.Integer id) {
                return CriticalTask.findCriticalTask(id);
            }
        };
    }
    
    public Converter<String, CriticalTask> ApplicationConversionServiceFactoryBean.getStringToCriticalTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.CriticalTask>() {
            public com.mindalliance.sb.model.CriticalTask convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CriticalTask.class);
            }
        };
    }
    
    public Converter<Discipline, String> ApplicationConversionServiceFactoryBean.getDisciplineToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Discipline, java.lang.String>() {
            public String convert(Discipline discipline) {
                return new StringBuilder().append(discipline.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Discipline> ApplicationConversionServiceFactoryBean.getIdToDisciplineConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Discipline>() {
            public com.mindalliance.sb.model.Discipline convert(java.lang.Integer id) {
                return Discipline.findDiscipline(id);
            }
        };
    }
    
    public Converter<String, Discipline> ApplicationConversionServiceFactoryBean.getStringToDisciplineConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Discipline>() {
            public com.mindalliance.sb.model.Discipline convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Discipline.class);
            }
        };
    }
    
    public Converter<Document, String> ApplicationConversionServiceFactoryBean.getDocumentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Document, java.lang.String>() {
            public String convert(Document document) {
                return new StringBuilder().append(document.getName()).append(' ').append(document.getUrl()).toString();
            }
        };
    }
    
    public Converter<Integer, Document> ApplicationConversionServiceFactoryBean.getIdToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Document>() {
            public com.mindalliance.sb.model.Document convert(java.lang.Integer id) {
                return Document.findDocument(id);
            }
        };
    }
    
    public Converter<String, Document> ApplicationConversionServiceFactoryBean.getStringToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Document>() {
            public com.mindalliance.sb.model.Document convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Document.class);
            }
        };
    }
    
    public Converter<Eoc, String> ApplicationConversionServiceFactoryBean.getEocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Eoc, java.lang.String>() {
            public String convert(Eoc eoc) {
                return new StringBuilder().append(eoc.getComments()).append(' ').append(eoc.getName()).append(' ').append(eoc.getSoftware()).append(' ').append(eoc.getActiveComments()).toString();
            }
        };
    }
    
    public Converter<Integer, Eoc> ApplicationConversionServiceFactoryBean.getIdToEocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Eoc>() {
            public com.mindalliance.sb.model.Eoc convert(java.lang.Integer id) {
                return Eoc.findEoc(id);
            }
        };
    }
    
    public Converter<String, Eoc> ApplicationConversionServiceFactoryBean.getStringToEocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Eoc>() {
            public com.mindalliance.sb.model.Eoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Eoc.class);
            }
        };
    }
    
    public Converter<IncidentCapability, String> ApplicationConversionServiceFactoryBean.getIncidentCapabilityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentCapability, java.lang.String>() {
            public String convert(IncidentCapability incidentCapability) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<IncidentCapabilityPK, IncidentCapability> ApplicationConversionServiceFactoryBean.getIdToIncidentCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentCapabilityPK, com.mindalliance.sb.model.IncidentCapability>() {
            public com.mindalliance.sb.model.IncidentCapability convert(com.mindalliance.sb.model.IncidentCapabilityPK id) {
                return IncidentCapability.findIncidentCapability(id);
            }
        };
    }
    
    public Converter<String, IncidentCapability> ApplicationConversionServiceFactoryBean.getStringToIncidentCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.IncidentCapability>() {
            public com.mindalliance.sb.model.IncidentCapability convert(String id) {
                return getObject().convert(getObject().convert(id, IncidentCapabilityPK.class), IncidentCapability.class);
            }
        };
    }
    
    public Converter<IncidentSystem, String> ApplicationConversionServiceFactoryBean.getIncidentSystemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentSystem, java.lang.String>() {
            public String convert(IncidentSystem incidentSystem) {
                return new StringBuilder().append(incidentSystem.getSystem()).append(' ').append(incidentSystem.getAcronym()).append(' ').append(incidentSystem.getComment()).toString();
            }
        };
    }
    
    public Converter<IncidentSystemPK, IncidentSystem> ApplicationConversionServiceFactoryBean.getIdToIncidentSystemConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentSystemPK, com.mindalliance.sb.model.IncidentSystem>() {
            public com.mindalliance.sb.model.IncidentSystem convert(com.mindalliance.sb.model.IncidentSystemPK id) {
                return IncidentSystem.findIncidentSystem(id);
            }
        };
    }
    
    public Converter<String, IncidentSystem> ApplicationConversionServiceFactoryBean.getStringToIncidentSystemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.IncidentSystem>() {
            public com.mindalliance.sb.model.IncidentSystem convert(String id) {
                return getObject().convert(getObject().convert(id, IncidentSystemPK.class), IncidentSystem.class);
            }
        };
    }
    
    public Converter<MissionArea, String> ApplicationConversionServiceFactoryBean.getMissionAreaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.MissionArea, java.lang.String>() {
            public String convert(MissionArea missionArea) {
                return new StringBuilder().append(missionArea.getName()).append(' ').append(missionArea.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, MissionArea> ApplicationConversionServiceFactoryBean.getIdToMissionAreaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.MissionArea>() {
            public com.mindalliance.sb.model.MissionArea convert(java.lang.Integer id) {
                return MissionArea.findMissionArea(id);
            }
        };
    }
    
    public Converter<String, MissionArea> ApplicationConversionServiceFactoryBean.getStringToMissionAreaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.MissionArea>() {
            public com.mindalliance.sb.model.MissionArea convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), MissionArea.class);
            }
        };
    }
    
    public Converter<Organization, String> ApplicationConversionServiceFactoryBean.getOrganizationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Organization, java.lang.String>() {
            public String convert(Organization organization) {
                return new StringBuilder().append(organization.getName()).append(' ').append(organization.getAcronym()).append(' ').append(organization.getUrl()).append(' ').append(organization.getAdded()).toString();
            }
        };
    }
    
    public Converter<Integer, Organization> ApplicationConversionServiceFactoryBean.getIdToOrganizationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Organization>() {
            public com.mindalliance.sb.model.Organization convert(java.lang.Integer id) {
                return Organization.findOrganization(id);
            }
        };
    }
    
    public Converter<String, Organization> ApplicationConversionServiceFactoryBean.getStringToOrganizationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Organization>() {
            public com.mindalliance.sb.model.Organization convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Organization.class);
            }
        };
    }
    
    public Converter<OrganizationCapability, String> ApplicationConversionServiceFactoryBean.getOrganizationCapabilityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationCapability, java.lang.String>() {
            public String convert(OrganizationCapability organizationCapability) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<OrganizationCapabilityPK, OrganizationCapability> ApplicationConversionServiceFactoryBean.getIdToOrganizationCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationCapabilityPK, com.mindalliance.sb.model.OrganizationCapability>() {
            public com.mindalliance.sb.model.OrganizationCapability convert(com.mindalliance.sb.model.OrganizationCapabilityPK id) {
                return OrganizationCapability.findOrganizationCapability(id);
            }
        };
    }
    
    public Converter<String, OrganizationCapability> ApplicationConversionServiceFactoryBean.getStringToOrganizationCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.OrganizationCapability>() {
            public com.mindalliance.sb.model.OrganizationCapability convert(String id) {
                return getObject().convert(getObject().convert(id, OrganizationCapabilityPK.class), OrganizationCapability.class);
            }
        };
    }
    
    public Converter<OrganizationIncident, String> ApplicationConversionServiceFactoryBean.getOrganizationIncidentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationIncident, java.lang.String>() {
            public String convert(OrganizationIncident organizationIncident) {
                return new StringBuilder().append(organizationIncident.getImpact()).append(' ').append(organizationIncident.getDescription()).toString();
            }
        };
    }
    
    public Converter<OrganizationIncidentPK, OrganizationIncident> ApplicationConversionServiceFactoryBean.getIdToOrganizationIncidentConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationIncidentPK, com.mindalliance.sb.model.OrganizationIncident>() {
            public com.mindalliance.sb.model.OrganizationIncident convert(com.mindalliance.sb.model.OrganizationIncidentPK id) {
                return OrganizationIncident.findOrganizationIncident(id);
            }
        };
    }
    
    public Converter<String, OrganizationIncident> ApplicationConversionServiceFactoryBean.getStringToOrganizationIncidentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.OrganizationIncident>() {
            public com.mindalliance.sb.model.OrganizationIncident convert(String id) {
                return getObject().convert(getObject().convert(id, OrganizationIncidentPK.class), OrganizationIncident.class);
            }
        };
    }
    
    public Converter<PlanFile, String> ApplicationConversionServiceFactoryBean.getPlanFileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.PlanFile, java.lang.String>() {
            public String convert(PlanFile planFile) {
                return new StringBuilder().append(planFile.getName()).append(' ').append(planFile.getMimeType()).append(' ').append(planFile.getSize()).toString();
            }
        };
    }
    
    public Converter<Integer, PlanFile> ApplicationConversionServiceFactoryBean.getIdToPlanFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.PlanFile>() {
            public com.mindalliance.sb.model.PlanFile convert(java.lang.Integer id) {
                return PlanFile.findPlanFile(id);
            }
        };
    }
    
    public Converter<String, PlanFile> ApplicationConversionServiceFactoryBean.getStringToPlanFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.PlanFile>() {
            public com.mindalliance.sb.model.PlanFile convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), PlanFile.class);
            }
        };
    }
    
    public Converter<Respondent, String> ApplicationConversionServiceFactoryBean.getRespondentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Respondent, java.lang.String>() {
            public String convert(Respondent respondent) {
                return new StringBuilder().append(respondent.getSurveyOpinion()).append(' ').append(respondent.getComments()).append(' ').append(respondent.getSubmitted()).append(' ').append(respondent.getProblems()).toString();
            }
        };
    }
    
    public Converter<Integer, Respondent> ApplicationConversionServiceFactoryBean.getIdToRespondentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Respondent>() {
            public com.mindalliance.sb.model.Respondent convert(java.lang.Integer id) {
                return Respondent.findRespondent(id);
            }
        };
    }
    
    public Converter<String, Respondent> ApplicationConversionServiceFactoryBean.getStringToRespondentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Respondent>() {
            public com.mindalliance.sb.model.Respondent convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Respondent.class);
            }
        };
    }
    
    public Converter<RespondentSubcommittee, String> ApplicationConversionServiceFactoryBean.getRespondentSubcommitteeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.RespondentSubcommittee, java.lang.String>() {
            public String convert(RespondentSubcommittee respondentSubcommittee) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<RespondentSubcommitteePK, RespondentSubcommittee> ApplicationConversionServiceFactoryBean.getIdToRespondentSubcommitteeConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.RespondentSubcommitteePK, com.mindalliance.sb.model.RespondentSubcommittee>() {
            public com.mindalliance.sb.model.RespondentSubcommittee convert(com.mindalliance.sb.model.RespondentSubcommitteePK id) {
                return RespondentSubcommittee.findRespondentSubcommittee(id);
            }
        };
    }
    
    public Converter<String, RespondentSubcommittee> ApplicationConversionServiceFactoryBean.getStringToRespondentSubcommitteeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.RespondentSubcommittee>() {
            public com.mindalliance.sb.model.RespondentSubcommittee convert(String id) {
                return getObject().convert(getObject().convert(id, RespondentSubcommitteePK.class), RespondentSubcommittee.class);
            }
        };
    }
    
    public Converter<SharedInfo, String> ApplicationConversionServiceFactoryBean.getSharedInfoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharedInfo, java.lang.String>() {
            public String convert(SharedInfo sharedInfo) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<SharedInfoPK, SharedInfo> ApplicationConversionServiceFactoryBean.getIdToSharedInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharedInfoPK, com.mindalliance.sb.model.SharedInfo>() {
            public com.mindalliance.sb.model.SharedInfo convert(com.mindalliance.sb.model.SharedInfoPK id) {
                return SharedInfo.findSharedInfo(id);
            }
        };
    }
    
    public Converter<String, SharedInfo> ApplicationConversionServiceFactoryBean.getStringToSharedInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SharedInfo>() {
            public com.mindalliance.sb.model.SharedInfo convert(String id) {
                return getObject().convert(getObject().convert(id, SharedInfoPK.class), SharedInfo.class);
            }
        };
    }
    
    public Converter<SharingIssue, String> ApplicationConversionServiceFactoryBean.getSharingIssueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharingIssue, java.lang.String>() {
            public String convert(SharingIssue sharingIssue) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<SharingIssuePK, SharingIssue> ApplicationConversionServiceFactoryBean.getIdToSharingIssueConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharingIssuePK, com.mindalliance.sb.model.SharingIssue>() {
            public com.mindalliance.sb.model.SharingIssue convert(com.mindalliance.sb.model.SharingIssuePK id) {
                return SharingIssue.findSharingIssue(id);
            }
        };
    }
    
    public Converter<String, SharingIssue> ApplicationConversionServiceFactoryBean.getStringToSharingIssueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SharingIssue>() {
            public com.mindalliance.sb.model.SharingIssue convert(String id) {
                return getObject().convert(getObject().convert(id, SharingIssuePK.class), SharingIssue.class);
            }
        };
    }
    
    public Converter<SituationReport, String> ApplicationConversionServiceFactoryBean.getSituationReportToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SituationReport, java.lang.String>() {
            public String convert(SituationReport situationReport) {
                return new StringBuilder().append(situationReport.getComments()).append(' ').append(situationReport.getProcess()).append(' ').append(situationReport.getAudience()).toString();
            }
        };
    }
    
    public Converter<Integer, SituationReport> ApplicationConversionServiceFactoryBean.getIdToSituationReportConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.SituationReport>() {
            public com.mindalliance.sb.model.SituationReport convert(java.lang.Integer id) {
                return SituationReport.findSituationReport(id);
            }
        };
    }
    
    public Converter<String, SituationReport> ApplicationConversionServiceFactoryBean.getStringToSituationReportConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SituationReport>() {
            public com.mindalliance.sb.model.SituationReport convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SituationReport.class);
            }
        };
    }
    
    public Converter<Subcommittee, String> ApplicationConversionServiceFactoryBean.getSubcommitteeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.Subcommittee, java.lang.String>() {
            public String convert(Subcommittee subcommittee) {
                return new StringBuilder().append(subcommittee.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Subcommittee> ApplicationConversionServiceFactoryBean.getIdToSubcommitteeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.mindalliance.sb.model.Subcommittee>() {
            public com.mindalliance.sb.model.Subcommittee convert(java.lang.Integer id) {
                return Subcommittee.findSubcommittee(id);
            }
        };
    }
    
    public Converter<String, Subcommittee> ApplicationConversionServiceFactoryBean.getStringToSubcommitteeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.Subcommittee>() {
            public com.mindalliance.sb.model.Subcommittee convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Subcommittee.class);
            }
        };
    }
    
    public Converter<SubcommitteeCapability, String> ApplicationConversionServiceFactoryBean.getSubcommitteeCapabilityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SubcommitteeCapability, java.lang.String>() {
            public String convert(SubcommitteeCapability subcommitteeCapability) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<SubcommitteeCapabilityPK, SubcommitteeCapability> ApplicationConversionServiceFactoryBean.getIdToSubcommitteeCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SubcommitteeCapabilityPK, com.mindalliance.sb.model.SubcommitteeCapability>() {
            public com.mindalliance.sb.model.SubcommitteeCapability convert(com.mindalliance.sb.model.SubcommitteeCapabilityPK id) {
                return SubcommitteeCapability.findSubcommitteeCapability(id);
            }
        };
    }
    
    public Converter<String, SubcommitteeCapability> ApplicationConversionServiceFactoryBean.getStringToSubcommitteeCapabilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SubcommitteeCapability>() {
            public com.mindalliance.sb.model.SubcommitteeCapability convert(String id) {
                return getObject().convert(getObject().convert(id, SubcommitteeCapabilityPK.class), SubcommitteeCapability.class);
            }
        };
    }
    
    public Converter<SystemIssue, String> ApplicationConversionServiceFactoryBean.getSystemIssueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SystemIssue, java.lang.String>() {
            public String convert(SystemIssue systemIssue) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<SystemIssuePK, SystemIssue> ApplicationConversionServiceFactoryBean.getIdToSystemIssueConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SystemIssuePK, com.mindalliance.sb.model.SystemIssue>() {
            public com.mindalliance.sb.model.SystemIssue convert(com.mindalliance.sb.model.SystemIssuePK id) {
                return SystemIssue.findSystemIssue(id);
            }
        };
    }
    
    public Converter<String, SystemIssue> ApplicationConversionServiceFactoryBean.getStringToSystemIssueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SystemIssue>() {
            public com.mindalliance.sb.model.SystemIssue convert(String id) {
                return getObject().convert(getObject().convert(id, SystemIssuePK.class), SystemIssue.class);
            }
        };
    }
    
    public Converter<String, OrganizationIncidentPK> ApplicationConversionServiceFactoryBean.getJsonToOrganizationIncidentPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.OrganizationIncidentPK>() {
            public OrganizationIncidentPK convert(String encodedJson) {
                return OrganizationIncidentPK.fromJsonToOrganizationIncidentPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrganizationIncidentPK, String> ApplicationConversionServiceFactoryBean.getOrganizationIncidentPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationIncidentPK, java.lang.String>() {
            public String convert(OrganizationIncidentPK organizationIncidentPK) {
                return Base64.encodeBase64URLSafeString(organizationIncidentPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SharedInfoPK> ApplicationConversionServiceFactoryBean.getJsonToSharedInfoPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SharedInfoPK>() {
            public SharedInfoPK convert(String encodedJson) {
                return SharedInfoPK.fromJsonToSharedInfoPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SharedInfoPK, String> ApplicationConversionServiceFactoryBean.getSharedInfoPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharedInfoPK, java.lang.String>() {
            public String convert(SharedInfoPK sharedInfoPK) {
                return Base64.encodeBase64URLSafeString(sharedInfoPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SubcommitteeCapabilityPK> ApplicationConversionServiceFactoryBean.getJsonToSubcommitteeCapabilityPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SubcommitteeCapabilityPK>() {
            public SubcommitteeCapabilityPK convert(String encodedJson) {
                return SubcommitteeCapabilityPK.fromJsonToSubcommitteeCapabilityPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SubcommitteeCapabilityPK, String> ApplicationConversionServiceFactoryBean.getSubcommitteeCapabilityPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SubcommitteeCapabilityPK, java.lang.String>() {
            public String convert(SubcommitteeCapabilityPK subcommitteeCapabilityPK) {
                return Base64.encodeBase64URLSafeString(subcommitteeCapabilityPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, IncidentSystemPK> ApplicationConversionServiceFactoryBean.getJsonToIncidentSystemPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.IncidentSystemPK>() {
            public IncidentSystemPK convert(String encodedJson) {
                return IncidentSystemPK.fromJsonToIncidentSystemPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<IncidentSystemPK, String> ApplicationConversionServiceFactoryBean.getIncidentSystemPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentSystemPK, java.lang.String>() {
            public String convert(IncidentSystemPK incidentSystemPK) {
                return Base64.encodeBase64URLSafeString(incidentSystemPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SystemIssuePK> ApplicationConversionServiceFactoryBean.getJsonToSystemIssuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SystemIssuePK>() {
            public SystemIssuePK convert(String encodedJson) {
                return SystemIssuePK.fromJsonToSystemIssuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SystemIssuePK, String> ApplicationConversionServiceFactoryBean.getSystemIssuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SystemIssuePK, java.lang.String>() {
            public String convert(SystemIssuePK systemIssuePK) {
                return Base64.encodeBase64URLSafeString(systemIssuePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrganizationCapabilityPK> ApplicationConversionServiceFactoryBean.getJsonToOrganizationCapabilityPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.OrganizationCapabilityPK>() {
            public OrganizationCapabilityPK convert(String encodedJson) {
                return OrganizationCapabilityPK.fromJsonToOrganizationCapabilityPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrganizationCapabilityPK, String> ApplicationConversionServiceFactoryBean.getOrganizationCapabilityPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.OrganizationCapabilityPK, java.lang.String>() {
            public String convert(OrganizationCapabilityPK organizationCapabilityPK) {
                return Base64.encodeBase64URLSafeString(organizationCapabilityPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, IncidentCapabilityPK> ApplicationConversionServiceFactoryBean.getJsonToIncidentCapabilityPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.IncidentCapabilityPK>() {
            public IncidentCapabilityPK convert(String encodedJson) {
                return IncidentCapabilityPK.fromJsonToIncidentCapabilityPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<IncidentCapabilityPK, String> ApplicationConversionServiceFactoryBean.getIncidentCapabilityPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.IncidentCapabilityPK, java.lang.String>() {
            public String convert(IncidentCapabilityPK incidentCapabilityPK) {
                return Base64.encodeBase64URLSafeString(incidentCapabilityPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, RespondentSubcommitteePK> ApplicationConversionServiceFactoryBean.getJsonToRespondentSubcommitteePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.RespondentSubcommitteePK>() {
            public RespondentSubcommitteePK convert(String encodedJson) {
                return RespondentSubcommitteePK.fromJsonToRespondentSubcommitteePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<RespondentSubcommitteePK, String> ApplicationConversionServiceFactoryBean.getRespondentSubcommitteePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.RespondentSubcommitteePK, java.lang.String>() {
            public String convert(RespondentSubcommitteePK respondentSubcommitteePK) {
                return Base64.encodeBase64URLSafeString(respondentSubcommitteePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SharingIssuePK> ApplicationConversionServiceFactoryBean.getJsonToSharingIssuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mindalliance.sb.model.SharingIssuePK>() {
            public SharingIssuePK convert(String encodedJson) {
                return SharingIssuePK.fromJsonToSharingIssuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SharingIssuePK, String> ApplicationConversionServiceFactoryBean.getSharingIssuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mindalliance.sb.model.SharingIssuePK, java.lang.String>() {
            public String convert(SharingIssuePK sharingIssuePK) {
                return Base64.encodeBase64URLSafeString(sharingIssuePK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getContactInfoToStringConverter());
        registry.addConverter(getIdToContactInfoConverter());
        registry.addConverter(getStringToContactInfoConverter());
        registry.addConverter(getCoreCapabilityToStringConverter());
        registry.addConverter(getIdToCoreCapabilityConverter());
        registry.addConverter(getStringToCoreCapabilityConverter());
        registry.addConverter(getCriticalTaskToStringConverter());
        registry.addConverter(getIdToCriticalTaskConverter());
        registry.addConverter(getStringToCriticalTaskConverter());
        registry.addConverter(getDisciplineToStringConverter());
        registry.addConverter(getIdToDisciplineConverter());
        registry.addConverter(getStringToDisciplineConverter());
        registry.addConverter(getDocumentToStringConverter());
        registry.addConverter(getIdToDocumentConverter());
        registry.addConverter(getStringToDocumentConverter());
        registry.addConverter(getEocToStringConverter());
        registry.addConverter(getIdToEocConverter());
        registry.addConverter(getStringToEocConverter());
        registry.addConverter(getIncidentCapabilityToStringConverter());
        registry.addConverter(getIdToIncidentCapabilityConverter());
        registry.addConverter(getStringToIncidentCapabilityConverter());
        registry.addConverter(getIncidentSystemToStringConverter());
        registry.addConverter(getIdToIncidentSystemConverter());
        registry.addConverter(getStringToIncidentSystemConverter());
        registry.addConverter(getMissionAreaToStringConverter());
        registry.addConverter(getIdToMissionAreaConverter());
        registry.addConverter(getStringToMissionAreaConverter());
        registry.addConverter(getOrganizationToStringConverter());
        registry.addConverter(getIdToOrganizationConverter());
        registry.addConverter(getStringToOrganizationConverter());
        registry.addConverter(getOrganizationCapabilityToStringConverter());
        registry.addConverter(getIdToOrganizationCapabilityConverter());
        registry.addConverter(getStringToOrganizationCapabilityConverter());
        registry.addConverter(getOrganizationIncidentToStringConverter());
        registry.addConverter(getIdToOrganizationIncidentConverter());
        registry.addConverter(getStringToOrganizationIncidentConverter());
        registry.addConverter(getPlanFileToStringConverter());
        registry.addConverter(getIdToPlanFileConverter());
        registry.addConverter(getStringToPlanFileConverter());
        registry.addConverter(getRespondentToStringConverter());
        registry.addConverter(getIdToRespondentConverter());
        registry.addConverter(getStringToRespondentConverter());
        registry.addConverter(getRespondentSubcommitteeToStringConverter());
        registry.addConverter(getIdToRespondentSubcommitteeConverter());
        registry.addConverter(getStringToRespondentSubcommitteeConverter());
        registry.addConverter(getSharedInfoToStringConverter());
        registry.addConverter(getIdToSharedInfoConverter());
        registry.addConverter(getStringToSharedInfoConverter());
        registry.addConverter(getSharingIssueToStringConverter());
        registry.addConverter(getIdToSharingIssueConverter());
        registry.addConverter(getStringToSharingIssueConverter());
        registry.addConverter(getSituationReportToStringConverter());
        registry.addConverter(getIdToSituationReportConverter());
        registry.addConverter(getStringToSituationReportConverter());
        registry.addConverter(getSubcommitteeToStringConverter());
        registry.addConverter(getIdToSubcommitteeConverter());
        registry.addConverter(getStringToSubcommitteeConverter());
        registry.addConverter(getSubcommitteeCapabilityToStringConverter());
        registry.addConverter(getIdToSubcommitteeCapabilityConverter());
        registry.addConverter(getStringToSubcommitteeCapabilityConverter());
        registry.addConverter(getSystemIssueToStringConverter());
        registry.addConverter(getIdToSystemIssueConverter());
        registry.addConverter(getStringToSystemIssueConverter());
        registry.addConverter(getJsonToOrganizationIncidentPKConverter());
        registry.addConverter(getOrganizationIncidentPKToJsonConverter());
        registry.addConverter(getJsonToSharedInfoPKConverter());
        registry.addConverter(getSharedInfoPKToJsonConverter());
        registry.addConverter(getJsonToSubcommitteeCapabilityPKConverter());
        registry.addConverter(getSubcommitteeCapabilityPKToJsonConverter());
        registry.addConverter(getJsonToIncidentSystemPKConverter());
        registry.addConverter(getIncidentSystemPKToJsonConverter());
        registry.addConverter(getJsonToSystemIssuePKConverter());
        registry.addConverter(getSystemIssuePKToJsonConverter());
        registry.addConverter(getJsonToOrganizationCapabilityPKConverter());
        registry.addConverter(getOrganizationCapabilityPKToJsonConverter());
        registry.addConverter(getJsonToIncidentCapabilityPKConverter());
        registry.addConverter(getIncidentCapabilityPKToJsonConverter());
        registry.addConverter(getJsonToRespondentSubcommitteePKConverter());
        registry.addConverter(getRespondentSubcommitteePKToJsonConverter());
        registry.addConverter(getJsonToSharingIssuePKConverter());
        registry.addConverter(getSharingIssuePKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
