// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mindalliance.sb.model;

import com.mindalliance.sb.model.ContactInfo;
import com.mindalliance.sb.model.Discipline;
import com.mindalliance.sb.model.IncidentSystem;
import com.mindalliance.sb.model.OrgType;
import com.mindalliance.sb.model.Organization;
import com.mindalliance.sb.model.OrganizationCapability;
import com.mindalliance.sb.model.OrganizationIncident;
import com.mindalliance.sb.model.Sharing;
import com.mindalliance.sb.model.SubcommitteeOrganization;
import java.util.Calendar;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.springframework.format.annotation.DateTimeFormat;

privileged aspect Organization_Roo_DbManaged {
    
    @ManyToMany
    @JoinTable(name = "organization_discipline", joinColumns = { @JoinColumn(name = "organization_id", nullable = false) }, inverseJoinColumns = { @JoinColumn(name = "discipline_id", nullable = false) })
    private Set<Discipline> Organization.disciplines;
    
    @OneToMany(mappedBy = "organization", cascade = CascadeType.ALL)
    private Set<ContactInfo> Organization.contactInfoes;
    
    @OneToMany(mappedBy = "maintainer", cascade = CascadeType.REMOVE)
    private Set<IncidentSystem> Organization.incidentSystems;
    
    @OneToMany(mappedBy = "parent", cascade = CascadeType.ALL)
    private Set<Organization> Organization.organizations;
    
    @OneToMany(mappedBy = "organization", cascade = CascadeType.REMOVE)
    private Set<OrganizationCapability> Organization.organizationCapabilities;
    
    @OneToMany(mappedBy = "organization", cascade = CascadeType.REMOVE)
    private Set<OrganizationIncident> Organization.organizationIncidents;
    
    @OneToMany(mappedBy = "organization", cascade = CascadeType.REMOVE)
    private Set<Sharing> Organization.sharings;
    
    @OneToMany(mappedBy = "organization", cascade = CascadeType.REMOVE)
    private Set<SubcommitteeOrganization> Organization.subcommitteeOrganizations;
    
    @ManyToOne
    @JoinColumn(name = "type", referencedColumnName = "id")
    private OrgType Organization.type;
    
    @ManyToOne
    @JoinColumn(name = "parent", referencedColumnName = "id", insertable = false, updatable = false)
    private Organization Organization.parent;
    
    @Column(name = "name", length = 127)
    @NotNull
    private String Organization.name;
    
    @Column(name = "logo", columnDefinition = "BLOB")
    private byte[] Organization.logo;
    
    @Column(name = "acronym", length = 127)
    private String Organization.acronym;
    
    @Column(name = "url", length = 127)
    private String Organization.url;
    
    @Column(name = "added", columnDefinition = "TIMESTAMP")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Organization.added;
    
    public Set<Discipline> Organization.getDisciplines() {
        return disciplines;
    }
    
    public void Organization.setDisciplines(Set<Discipline> disciplines) {
        this.disciplines = disciplines;
    }
    
    public Set<ContactInfo> Organization.getContactInfoes() {
        return contactInfoes;
    }
    
    public void Organization.setContactInfoes(Set<ContactInfo> contactInfoes) {
        this.contactInfoes = contactInfoes;
    }
    
    public Set<IncidentSystem> Organization.getIncidentSystems() {
        return incidentSystems;
    }
    
    public void Organization.setIncidentSystems(Set<IncidentSystem> incidentSystems) {
        this.incidentSystems = incidentSystems;
    }
    
    public Set<Organization> Organization.getOrganizations() {
        return organizations;
    }
    
    public void Organization.setOrganizations(Set<Organization> organizations) {
        this.organizations = organizations;
    }
    
    public Set<OrganizationCapability> Organization.getOrganizationCapabilities() {
        return organizationCapabilities;
    }
    
    public void Organization.setOrganizationCapabilities(Set<OrganizationCapability> organizationCapabilities) {
        this.organizationCapabilities = organizationCapabilities;
    }
    
    public Set<OrganizationIncident> Organization.getOrganizationIncidents() {
        return organizationIncidents;
    }
    
    public void Organization.setOrganizationIncidents(Set<OrganizationIncident> organizationIncidents) {
        this.organizationIncidents = organizationIncidents;
    }
    
    public Set<Sharing> Organization.getSharings() {
        return sharings;
    }
    
    public void Organization.setSharings(Set<Sharing> sharings) {
        this.sharings = sharings;
    }
    
    public Set<SubcommitteeOrganization> Organization.getSubcommitteeOrganizations() {
        return subcommitteeOrganizations;
    }
    
    public void Organization.setSubcommitteeOrganizations(Set<SubcommitteeOrganization> subcommitteeOrganizations) {
        this.subcommitteeOrganizations = subcommitteeOrganizations;
    }
    
    public OrgType Organization.getType() {
        return type;
    }
    
    public void Organization.setType(OrgType type) {
        this.type = type;
    }
    
    public Organization Organization.getParent() {
        return parent;
    }
    
    public void Organization.setParent(Organization parent) {
        this.parent = parent;
    }
    
    public String Organization.getName() {
        return name;
    }
    
    public void Organization.setName(String name) {
        this.name = name;
    }
    
    public byte[] Organization.getLogo() {
        return logo;
    }
    
    public void Organization.setLogo(byte[] logo) {
        this.logo = logo;
    }
    
    public String Organization.getAcronym() {
        return acronym;
    }
    
    public void Organization.setAcronym(String acronym) {
        this.acronym = acronym;
    }
    
    public String Organization.getUrl() {
        return url;
    }
    
    public void Organization.setUrl(String url) {
        this.url = url;
    }
    
    public Calendar Organization.getAdded() {
        return added;
    }
    
    public void Organization.setAdded(Calendar added) {
        this.added = added;
    }
    
}
