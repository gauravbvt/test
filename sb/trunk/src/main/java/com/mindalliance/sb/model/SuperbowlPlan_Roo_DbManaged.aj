// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mindalliance.sb.model;

import com.mindalliance.sb.model.PlanFile;
import com.mindalliance.sb.model.Respondent;
import com.mindalliance.sb.model.SuperbowlPlan;
import com.mindalliance.sb.model.SuperbowlPlanner;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

privileged aspect SuperbowlPlan_Roo_DbManaged {
    
    @OneToMany(mappedBy = "superbowlPlan", cascade = CascadeType.REMOVE)
    private Set<PlanFile> SuperbowlPlan.planFiles;
    
    @OneToMany(mappedBy = "superbowlPlan", cascade = CascadeType.REMOVE)
    private Set<SuperbowlPlanner> SuperbowlPlan.superbowlPlanners;
    
    @ManyToOne
    @JoinColumn(name = "respondent", referencedColumnName = "id", nullable = false)
    private Respondent SuperbowlPlan.respondent;
    
    @Column(name = "shared", columnDefinition = "BIT")
    private Boolean SuperbowlPlan.shared;
    
    public Set<PlanFile> SuperbowlPlan.getPlanFiles() {
        return planFiles;
    }
    
    public void SuperbowlPlan.setPlanFiles(Set<PlanFile> planFiles) {
        this.planFiles = planFiles;
    }
    
    public Set<SuperbowlPlanner> SuperbowlPlan.getSuperbowlPlanners() {
        return superbowlPlanners;
    }
    
    public void SuperbowlPlan.setSuperbowlPlanners(Set<SuperbowlPlanner> superbowlPlanners) {
        this.superbowlPlanners = superbowlPlanners;
    }
    
    public Respondent SuperbowlPlan.getRespondent() {
        return respondent;
    }
    
    public void SuperbowlPlan.setRespondent(Respondent respondent) {
        this.respondent = respondent;
    }
    
    public Boolean SuperbowlPlan.getShared() {
        return shared;
    }
    
    public void SuperbowlPlan.setShared(Boolean shared) {
        this.shared = shared;
    }
    
}
