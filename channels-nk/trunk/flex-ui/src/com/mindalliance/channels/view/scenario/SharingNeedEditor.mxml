<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:scenario="com.mindalliance.channels.view.scenario.*" 
	xmlns:common="com.mindalliance.channels.view.common.*">
	<mx:states>
		<mx:State name="EditState">
			<mx:SetProperty target="{formItemPolicy}" name="mouseChildren" value="true"/>
			<mx:SetProperty target="{formItemPolicy}" name="mouseEnabled" value="true"/>
			<mx:SetProperty target="{txtPolicyURL}" name="editable" value="true"/>
			<mx:SetProperty target="{txtPolicyDescription}" name="editable" value="true"/>
		</mx:State>
	</mx:states>

	<mx:Array id="deliveryMode">
		<mx:Object label="Notify"/>
		<mx:Object label="Respond"/>
	</mx:Array>
	
	<mx:Array id="format">
		<mx:Object label="Hard Copy (Paper)"/>
		<mx:Object label="MS Word Document"/>
		<mx:Object label="PDF"/>
		<mx:Object label="Audio"/>
		<mx:Object label="Video"/>
	</mx:Array>
	
	<mx:Array id="policyRequirementType">
		<mx:Object label="obligated"/>
		<mx:Object label="interdicted"/>
	</mx:Array>
	
	<mx:Script>
		<![CDATA[
		  import com.mindalliance.channels.util.CairngormHelper;
		  import com.mindalliance.channels.events.sharingneed.CreateSharingNeedEvent;
		  import com.mindalliance.channels.vo.common.SourceOrSink;
		  import com.mindalliance.channels.vo.common.Knowable;
            private function switchToEditState():void {
                currentState = 'EditState' ;
            }
            
            private function confirmEdit():void {
                currentState = '' ;
            }
            
            private function cancelEdit():void {
                currentState = '' ;
            }
            
            
            private function createSharingNeed() {
                CairngormHelper.fireEvent(new CreateSharingNeedEvent(SourceOrSink.getRoleType("role1"), Knowable.getEventType("event1"), SourceOrSink.getRepositoryType("repository1"), Knowable.getTaskType("task1")));
            }
		]]>
	</mx:Script>
	
	<mx:Form>
		<common:ViewEditStateChangeFormItem id="viewEditStateChangeFormItem"
			btnEditClickHandler="{switchToEditState}" cancelEditHandler="{cancelEdit}" confirmEditHandler="{confirmEdit}" 
			width="100%" currentState="{currentState}"/>
		<mx:FormItem id="formItemPolicy" label="Policy requirement" resizeEffect="Resize" mouseChildren="false" mouseEnabled="false">
			<mx:VBox>
				<mx:RadioButtonGroup id="rbgPolicyRequirement"/>
				<mx:RadioButton id="rbPolicyNone" groupName="rbgPolicyRequirement" label="This sharing need is not associated with a policy."
					includeInLayout="{(currentState == 'EditState') || (rbPolicyNone.selected)}" visible="{rbPolicyNone.includeInLayout}"
					fontWeight="{rbPolicyNone.selected ? 'bold' : 'normal'}"
					selected="true"/>
				<mx:RadioButton id="rbPolicyObligate" groupName="rbgPolicyRequirement" label="This sharing need is obligated by a policy."
					includeInLayout="{(currentState == 'EditState') || (rbPolicyObligate.selected)}" visible="{rbPolicyObligate.includeInLayout}"
					fontWeight="{rbPolicyObligate.selected ? 'bold' : 'normal'}"/>
				<mx:RadioButton id="rbPolicyInterdict" groupName="rbgPolicyRequirement" label="This sharing need is interdicted by a policy."
					includeInLayout="{(currentState == 'EditState') || (rbPolicyInterdict.selected)}" 
					visible="{rbPolicyInterdict.includeInLayout}"
					fontWeight="{rbPolicyInterdict.selected ? 'bold' : 'normal'}"/>
			</mx:VBox>
		</mx:FormItem>
		<mx:FormItem id="formItemPolicyURL"
				visible="{!rbPolicyNone.selected}" 
				includeInLayout="{!rbPolicyNone.selected}"
				label="Policy URL">
			<mx:TextInput width="100%" id="txtPolicyURL" 
				editable="false" styleName="URLField" 
				useHandCursor="{(currentState == '') &amp;&amp; (txtPolicyURL.text.length > 0)}"
				click="if (currentState == '') navigateToURL(new URLRequest(txtPolicyURL.text))"/>			
		</mx:FormItem>
		<mx:FormItem id="formItemPolicyDescription"
				visible="{!rbPolicyNone.selected}" 
				includeInLayout="{!rbPolicyNone.selected}"
				label="Policy Description">
			<mx:TextArea width="100%" id="txtPolicyDescription" editable="false"/>
		</mx:FormItem>
	</mx:Form>
	<mx:HBox width="100%" horizontalAlign="center">
		<mx:HRule width="50%"/>
	</mx:HBox>
	<mx:Label text="Source" fontWeight="bold"/>
	<scenario:KnowingEditor id="sourceKnowingEditor" currentState="{currentState}"/>
	<mx:HBox width="100%" horizontalAlign="center">
		<mx:HRule width="50%"/>
	</mx:HBox>
	<mx:Label text="Target" fontWeight="bold"/>
	<scenario:KnowingEditor id="targetKnowingEditor" currentState="{currentState}"/>
	<mx:Form>
		<mx:FormItem label="Criticality">
			<mx:HSlider labels="['low', 'medium', 'high']" showDataTip="false" showTrackHighlight="true"
				minimum="1" maximum="3" snapInterval="1" allowTrackClick="true"/>
		</mx:FormItem>
		<mx:FormItem label="Urgency" direction="horizontal">
			<mx:TextInput width="50"/><common:TimeScalesComboBox/>
		</mx:FormItem>
		<mx:FormItem label="Delivery" direction="horizontal">
			<mx:ComboBox dataProvider="{deliveryMode}" labelField="label"/>
			<mx:HBox verticalAlign="middle" height="100%">
				<mx:CheckBox label="Refresh" id="cbDeliveryRefresh"/>
				<mx:HBox includeInLayout="{cbDeliveryRefresh.selected}" visible="{cbDeliveryRefresh.selected}" verticalAlign="middle">
					<mx:Label text="every"/><mx:TextInput width="50"/><common:TimeScalesComboBox/>
				</mx:HBox>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Format">
			<mx:ComboBox dataProvider="{format}"/>
		</mx:FormItem>
	</mx:Form>
	<mx:Button click="createSharingNeed()" label="blah"/>
</mx:VBox>