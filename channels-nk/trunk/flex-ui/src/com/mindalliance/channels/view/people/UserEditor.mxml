<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" implements="com.mindalliance.channels.view.common.IChannelsModelComponent">

	<mx:Script>
		<![CDATA[
			import com.mindalliance.channels.model.IChannelsModel;
			import com.mindalliance.channels.model.people.UserEditorModel;
			
			[Bindable]
			private var model : UserEditorModel;
			
			public function get channelsModel() : IChannelsModel {
				return model;	
			}
			
			public function set channelsModel(model : IChannelsModel) : void {
				this.model = (model as UserEditorModel);
			}
		
			private function isPasswordChangeValid():Boolean {
				// WRITE PASSWORD VALIDATION LOGIC HERE
				return (txtNewPassword.length > 0) 
				&& (txtNewPasswordConfirm.length > 0) 
				&& (txtNewPasswordConfirm.text == txtNewPassword.text) ;
			}
			
			private function cancelChangePassword():void {
				txtNewPassword.text = '' ;
				txtNewPasswordConfirm.text = '' ;
				currentState = '' ;
			}
			
			private function confirmChangePassword():void {
				txtPassword.text = txtNewPassword.text;
				txtNewPassword.text = '' ;
				txtNewPasswordConfirm.text = '' ;
				currentState = '' ;
			}
		]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="EditState">
			<mx:AddChild relativeTo="{formitemCertified}" position="before">
				<mx:FormItem label="Type New Password" fontWeight="bold">
					<mx:TextInput displayAsPassword="true" id="txtNewPassword"/>
				</mx:FormItem>
			</mx:AddChild>
			<mx:AddChild relativeTo="{formitemCertified}" position="before">
				<mx:FormItem label="Retype New Password" fontWeight="bold">
					<mx:TextInput displayAsPassword="true" id="txtNewPasswordConfirm"/>
				</mx:FormItem>
			</mx:AddChild>
			<mx:RemoveChild target="{button1}"/>
			<mx:AddChild relativeTo="{formitemCertified}" position="before">
				<mx:FormItem direction="horizontal" id="formitem1">
					<mx:Button label="Confirm" id="btnConfirm" enabled="{isPasswordChangeValid()}" click="confirmChangePassword()"/>
					<mx:Button label="Cancel" id="btnCancel" click="cancelChangePassword()"/>
				</mx:FormItem>
			</mx:AddChild>
			<mx:SetProperty target="{formitemCertified}" name="visible" value="false"/>
			<mx:SetProperty target="{formitemCertified}" name="includeInLayout" value="false"/>
			<mx:AddChild relativeTo="{formitem1}" position="before">
				<mx:FormItem visible="{!isPasswordChangeValid()}">
					<mx:Label text="Passwords do not match" color="#FF0000"/>
				</mx:FormItem>
			</mx:AddChild>
		</mx:State>
	</mx:states>

	<mx:transitions>
		<mx:Transition fromState="*" toState="*">
			<mx:Fade target="{this}"/>
		</mx:Transition>
	</mx:transitions>

	<mx:FormItem label="Username" id="formitemUsername">
		<mx:TextInput id="txtUsername" editable="false"/>
	</mx:FormItem>
	<mx:FormItem label="Password" direction="horizontal" id="formitemPassword">
			<mx:TextInput displayAsPassword="true" id="txtPassword" editable="false"/>
			<mx:Button label="Change" click="currentState = 'EditState'" id="button1"/>
	</mx:FormItem>
	<mx:FormItem label="Certified by" direction="vertical" 
		mouseOver="btnViewLiaisonProfile.visible = true" 
		mouseOut="btnViewLiaisonProfile.visible = false" 
		id="formitemCertified" visible="false" includeInLayout="false">
		<mx:Label text="-liaison name-, -organization name-"/>
		<mx:Button label="View profile" id="btnViewLiaisonProfile" visible="false"/>
	</mx:FormItem>
</mx:Form>
