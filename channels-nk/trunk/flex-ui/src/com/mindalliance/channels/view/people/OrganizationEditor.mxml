<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:common="com.mindalliance.channels.view.common.*">
    
	<mx:Script>
		<![CDATA[
			import com.mindalliance.channels.vo.AddressVO;
			import com.mindalliance.channels.vo.ElementVO;
			import com.mindalliance.channels.model.application.PropertyEditorModel;
			import com.mindalliance.channels.model.ChannelsModelLocator;
			import com.mindalliance.channels.model.people.OrganizationEditorModel;
			import com.mindalliance.channels.events.people.*;
			
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			
			private function switchToEditState():void {
				currentState = 'EditState' ;
			}
			
			private function confirmEdit():void {
				update();
				currentState = '' ;
			}
			
			private function cancelEdit():void {
				//revert
				CairngormEventDispatcher.getInstance().dispatchEvent( new GetOrganizationEvent(model.organization.id) );
				currentState = '' ;
			}
			
			[Bindable]
			private var model : PropertyEditorModel = ChannelsModelLocator.getInstance().propertyEditorModel;
			
			private function update() :void {
				model.organization.name = txtName.text;
				model.organization.abbreviation = txtAbbrev.text;
				model.organization.description = txtDescription.text;
				model.organization.address = new AddressVO(txtStreet.text, txtCity.text, comboUSStates.selectedItem.abbr);
				model.organization.parent = (comboOrganizations.selectedItem as ElementVO);	
				
				CairngormEventDispatcher.getInstance().dispatchEvent( new UpdateOrganizationEvent(model.organization) );
			}
			
			private function queueUpdate() : void {
				CairngormEventDispatcher.getInstance().dispatchEvent( new QueueOrganizationUpdateEvent() );
			}
			
			private function populateParentComboBox() : void {
				CairngormEventDispatcher.getInstance().dispatchEvent( new GetOrganizationListEvent() );
			}
			
			
		]]>
	</mx:Script>
    
    <mx:states>
    	<mx:State name="EditState">
    		<mx:AddChild relativeTo="{viewEditStateChangeFormItem}" position="after">
    			<common:HintFieldRequiredFormItem/>
    		</mx:AddChild>
    		<mx:AddChild relativeTo="{formitemAbbrev}" position="firstChild">
		    	<mx:Label text="e.g.: NYPD" styleName="FormItemDescription"/>
    		</mx:AddChild>
    		<mx:SetProperty target="{txtName}" name="editable" value="true"/>
    		<mx:SetProperty target="{formitemName}" name="required" value="true"/>
    		<mx:SetProperty target="{formitemParentOrg}" name="mouseEnabled" value="true"/>
    		<mx:SetProperty target="{formitemParentOrg}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{formitemAddress}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{formitemAddress}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{viewEditStateChangeFormItem}" name="currentState" value="EditState"/>
    	</mx:State>
    </mx:states>
    
    <mx:transitions>
    	<common:ViewEditStateTransition fromState="*" toState="*" targets="{[this]}"/>
    </mx:transitions>
    
    <mx:Style source="../../../../../assets/styles/FormStyles.css"/>
    
    <common:ViewEditStateChangeFormItem id="viewEditStateChangeFormItem"
    	btnEditClickHandler="{switchToEditState}"
    	confirmEditHandler="{confirmEdit}"
    	cancelEditHandler="{cancelEdit}"/>
    	
    <mx:FormHeading label="{'Organization: '+txtName.text}"/>	
    <mx:FormItem label="Name" required="false" id="formitemName">
        <mx:TextInput id="txtName" editable="{currentState=='EditState'}" text="{model.organization.name}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Abbreviation" direction="vertical" id="formitemAbbrev">
    	<mx:TextInput id="txtAbbrev" editable="{currentState=='EditState'}" text="{model.organization.abbreviation}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Description" id="formitemDescription">
        <mx:TextArea id="txtDescription" editable="{currentState=='EditState'}" text="{model.organization.description}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Parent Organization" direction="vertical" mouseChildren="false" mouseEnabled="false" id="formitemParentOrg">
	<common:ElementComboBox id="comboOrganizations" dataProvider="{model.organizationList}" selectedValue="{model.organization.parent.id}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Address" direction="vertical" mouseChildren="false" mouseEnabled="false" id="formitemAddress">
        <mx:Label text="Street" />
        <mx:TextInput id="txtStreet" text="{model.organization.address.street}" change="queueUpdate()"/>
        <mx:Label text="City" />
        <mx:TextInput id="txtCity" text="{model.organization.address.city}" change="queueUpdate()"/>
        <mx:HBox>
        	<mx:Label text="State"/><common:USStatesComboBox id="comboUSStates" change="queueUpdate()" selectedValue="{model.organization.address.state}"/>
        </mx:HBox>
    </mx:FormItem>
</mx:Form>