<?xml version="1.0" encoding="utf-8"?>
<mx:Form 
	xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:common="com.mindalliance.channels.view.common.*" implements="com.mindalliance.channels.view.common.IChannelsModelComponent">

	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			import com.mindalliance.channels.view.common.InputTextDialog;
			import com.mindalliance.channels.model.IChannelsModel;
			import com.mindalliance.channels.model.people.RoleEditorModel;
			
			[Bindable]
			private var model : RoleEditorModel;
			
			public function get channelsModel() : IChannelsModel {
				return model;	
			}
			
			public function set channelsModel(model : IChannelsModel) : void {
				this.model = (model as RoleEditorModel);
			}

			private function switchToEditState():void {
				currentState = 'EditState' ;
			}
			
			private function confirmEdit():void {
				// Do stuff and then:
				currentState = '' ;
			}
			
			private function cancelEdit():void {
				// Do stuff and then:
				currentState = '' ;
			}
			
			private function handleAddExpertise():void {
				var ipd:InputTextDialog = new InputTextDialog() ;
				ipd.title = 'Enter short description of expertise' ;
				ipd.okEventHandler = function handler(text:String):void {
					if (text != null && text.length > 0)
						Expertise.addItem({name:text}) ;
				}
				PopUpManager.addPopUp(ipd, listExpertise, false) ;
			}
			
			[Bindable]
			private var Expertise:ArrayCollection = new ArrayCollection() ;
		]]>
	</mx:Script>
    
    <mx:states>
    	<mx:State name="EditState">
    		<mx:AddChild relativeTo="{viewEditStateChangeFormItem}" position="after">
    			<common:HintFieldRequiredFormItem/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{listExpertise}" position="after">
				<mx:HBox width="100%">
					<common:AddButton id="btnAddExpertise" click="handleAddExpertise()"/>
					<common:RemoveButton enabled="{listExpertise.selectedItems.length > 0}" id="btnRemoveExpertise"/>
				</mx:HBox>
			</mx:AddChild>
    		<mx:SetProperty target="{txtName}" name="editable" value="true"/>
    		<mx:SetProperty target="{viewEditStateChangeFormItem}" name="currentState" value="EditState"/>
    		<mx:SetProperty target="{txtDescription}" name="editable" value="true"/>
    		<mx:SetProperty target="{formitem1}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{formitem1}" name="mouseEnabled" value="true"/>
		</mx:State>
	</mx:states>
	
    <mx:Style source="../../../../../assets/styles/FormStyles.css"/>
	
    <common:ViewEditStateChangeFormItem id="viewEditStateChangeFormItem"
    	btnEditClickHandler="{switchToEditState}"
    	confirmEditHandler="{confirmEdit}"
    	cancelEditHandler="{cancelEdit}"/>
	
    <mx:FormItem label="Role Name">
        <mx:TextInput id="txtName" editable="false"/>
    </mx:FormItem>
    <mx:FormItem label="Organization" mouseEnabled="false" mouseChildren="false" id="formitem1">
    	<mx:ComboBox/>
    </mx:FormItem>
    <mx:FormItem label="Description">
        <mx:TextArea id="txtDescription" editable="false"/>
    </mx:FormItem>
    <mx:FormItem label="Expertise" direction="vertical">
		<mx:Text styleName="FormItemDescription" selectable="false"
			width="{listExpertise.width}">
			<mx:htmlText>
				<![CDATA[This role can provide the following<br>information at all times:]]>
			</mx:htmlText>
		</mx:Text>
		<mx:List editable="false" id="listExpertise" dataProvider="{Expertise}" labelField="name"/>
    </mx:FormItem>
    <mx:FormItem label="Teams" direction="vertical" visible="false" includeInLayout="false">
		<mx:Text styleName="FormItemDescription"  text="This role is part of the following teams:" selectable="false"/>
    	<mx:List editable="false" id="listTeams"/>
    </mx:FormItem>
</mx:Form>