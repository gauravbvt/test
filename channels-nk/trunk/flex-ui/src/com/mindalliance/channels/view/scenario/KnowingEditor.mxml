<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:common="com.mindalliance.channels.view.common.*">
    <mx:Script>
        <![CDATA[
        	import com.mindalliance.channels.vo.KnowVO;
            import com.adobe.cairngorm.control.CairngormEvent;
            import com.mindalliance.channels.view.UtilFuncs;
            
            import com.mindalliance.channels.vo.common.*;
            import mx.collections.ArrayCollection;
            import mx.managers.PopUpManager;
            import com.mindalliance.channels.events.sharingneed.*;
            import com.mindalliance.channels.events.common.*;
            
            import com.mindalliance.channels.view.common.InputTextDialog;
            import com.mindalliance.channels.model.EditorModel;
            import com.adobe.cairngorm.control.CairngormEventDispatcher;
            import com.mindalliance.channels.vo.common.ElementVO;
            import com.mindalliance.channels.vo.KnowVO;
            import com.mindalliance.channels.model.ChannelsModelLocator;
            import com.mindalliance.channels.model.ElementModel;
            import com.mindalliance.channels.util.CairngormHelper;
            
            [Bindable]
            public function get model() : EditorModel 
            {
                return _editorModel;
            }
            
            public function set model(model : EditorModel) : void 
            {
                this._editorModel = model;
            }
            public var _editorModel : EditorModel = ChannelsModelLocator.getInstance().getEditorModel();
            
            [Bindable]
            private var elementModel : ElementModel;
            
            [Bindable] 
            private var edited : KnowVO;
            
            [Bindable] private var roleList : ArrayCollection;
            [Bindable] private var agentList : ArrayCollection;
            [Bindable] private var repositoryList : ArrayCollection;
            [Bindable] private var taskList : ArrayCollection;
            [Bindable] private var eventList : ArrayCollection;
            [Bindable] private var artifactList : ArrayCollection;
            [Bindable] private var acquirementList : ArrayCollection;
            [Bindable] private var topicList : ArrayCollection;
            
                        
            private function addInformation():void {
                UtilFuncs.GetUserTextInput(this, 
                    function anon(text:String):void {
                        if (topicList == null) {
                            topicList = new ArrayCollection();	
                        }
                        if (text != null && text.length > 0) {
                            topicList.addItem(new TopicVO(text,"",null,new ArrayCollection(),new ArrayCollection())) ;
                            queueUpdate();
                        }
                    }, "Enter One Line Description of Information", true) ;
            }
            
            private function removeInformation() : void {
            	if (listWhat.selectedIndex >=0) {
            	   topicList.removeItemAt(listWhat.selectedIndex);	
            	   queueUpdate();
            	}
            	
            }
            
            private function queueUpdate() : void {
                CairngormHelper.queueUpdate(model);
            }
            
            public function getWho() : SourceOrSink {
            	var who : SourceOrSink;
                switch (comboWhoType.selectedItem.name) {
                    case "role": who = SourceOrSink.getRoleType(comboWhoRole.selectedItem.id); break;
                    case "agent": who = SourceOrSink.getAgentType(comboWhoAgent.selectedItem.id); break;
                    case "repository": who = SourceOrSink.getRepositoryType(comboWhoRepository.selectedItem.id); break;
                };
                return who;
            }
            
            public function getAbout() : Knowable {
            	var about : Knowable;
            	switch (comboAboutType.selectedItem.name) {
                    case "task": about = Knowable.getTaskType(comboAboutTask.selectedItem.id); break;
                    case "event": about = Knowable.getEventType(comboAboutEvent.selectedItem.id); break;
                    case "artifact": about = Knowable.getArtifactType(comboAboutArtifact.selectedItem.id); break;
                    case "acquirement": about = Knowable.getAcquirementType(comboAboutAcquirement.selectedItem.id); break;
                };
                return about;
            }
            
            public function getWhat() : InformationVO {
            	if (topicList.length > 0)
            	   return new InformationVO(topicList);
                return null;
            }
            
            public function update() : void {
            	
            	
                CairngormHelper.fireEvent(new UpdateKnowEvent(model,
                                                                getWho(),
                                                                getAbout(),
                                                                getWhat()));
            }
            
            public function revert() : void {
                CairngormHelper.fireEvent(new GetKnowEvent(edited.id,model));
                	
            }
            
        ]]>
    </mx:Script>

	<mx:states>
		<mx:State name="EditState">
			<mx:AddChild relativeTo="{formItemWhat}" position="lastChild">
				<mx:HBox>
					<common:AddButton click="addInformation()"/>
					<common:RemoveButton enabled="{listWhat.selectedItems.length > 0}"/>
				</mx:HBox>
			</mx:AddChild>
			<mx:SetProperty target="{formItemWho}" name="mouseChildren"/>
			<mx:SetProperty target="{formItemWho}" name="mouseEnabled"/>
			<mx:SetProperty target="{formItemAbout}" name="mouseChildren"/>
			<mx:SetProperty target="{formItemAbout}" name="mouseEnabled"/>
		</mx:State>
	</mx:states>

	<mx:Array id="whoType">
		<mx:Object label="Role" name="role"/>
		<mx:Object label="Agent" name="agent"/>
		<mx:Object label="Repository" name="repository"/>
	</mx:Array>
	
	<mx:Array id="aboutType">
		<mx:Object label="Task" name="task"/>
		<mx:Object label="Event" name="event"/>
		<mx:Object label="Artifact" name="artifact"/>
		<mx:Object label="Acquirement" name="acquirement"/>
	</mx:Array>

    <mx:Binding source="model.getElementModel(model.id)" destination="elementModel"/>
    <mx:Binding source="(elementModel.data as KnowVO)" destination="edited"/>	

    <mx:Binding source="model.getElementListModel('roles').data" destination="roleList"/>
    <mx:Binding source="model.getElementListModel('agents').data" destination="agentList"/>
    <mx:Binding source="model.getElementListModel('repositories').data" destination="repositoryList"/>
    <mx:Binding source="model.getElementListModel('tasks').data" destination="taskList"/>
    <mx:Binding source="model.getElementListModel('events').data" destination="eventList"/>
    <mx:Binding source="model.getElementListModel('artifacts').data" destination="artifactList"/>
    <mx:Binding source="model.getElementListModel('acquirements').data" destination="acquirementList"/>
    <mx:Binding source="edited.what.topics" destination="topicList"/>
    
	<mx:FormItem id="formItemWho" label="Who" mouseChildren="false" mouseEnabled="false">
		<common:ElementComboBox id="comboWhoType" dataProvider="{whoType}" labelField="label" dataField="name" selectedValue="{edited.who.type}" change="queueUpdate()"/>
		<mx:HBox>
			<mx:Label text="{'Choose '+whoType.getItemAt(comboWhoType.selectedIndex).label+':'}"/>
			<mx:ViewStack id="vsWho" selectedIndex="{comboWhoType.selectedIndex}">
				<mx:Box>
					<common:ElementComboBox id="comboWhoRole" dataProvider="{roleList}"  selectedValue="{edited.who.id}" change="queueUpdate()"/>
                 
				</mx:Box>
				<mx:Box>
					<common:ElementComboBox id="comboWhoAgent" dataProvider="{agentList}"  selectedValue="{edited.who.id}" change="queueUpdate()"/>
                 
				</mx:Box>
				<mx:Box>    
				    <common:ElementComboBox id="comboWhoRepository" dataProvider="{repositoryList}"  selectedValue="{edited.who.id}" change="queueUpdate()"/>
                 
				</mx:Box>
			</mx:ViewStack>
		</mx:HBox>
	</mx:FormItem>
	<mx:FormItem id="formItemAbout" label="About" mouseChildren="false" mouseEnabled="false">
		<common:ElementComboBox id="comboAboutType" dataProvider="{aboutType}" labelField="label" dataField="name" selectedValue="{edited.about.type}" change="queueUpdate()"/>
		<mx:HBox>
			<mx:Label text="{'Choose '+aboutType.getItemAt(comboAboutType.selectedIndex).label+':'}"/>
			<mx:ViewStack id="vsAbout" selectedIndex="{comboAboutType.selectedIndex}">
				<mx:Box>
					<common:ElementComboBox id="comboAboutTask" dataProvider="{taskList}"  selectedValue="{edited.about.id}" change="queueUpdate()"/>
				</mx:Box>
				<mx:Box>
					<common:ElementComboBox id="comboAboutEvent" dataProvider="{eventList}"  selectedValue="{edited.about.id}" change="queueUpdate()"/>
                            
				</mx:Box>
				<mx:Box>
					<common:ElementComboBox id="comboAboutArtifact" dataProvider="{artifactList}"  selectedValue="{edited.about.id}" change="queueUpdate()"/>
				</mx:Box>
				<mx:Box>
					<common:ElementComboBox id="comboAboutAcquirement" dataProvider="{acquirementList}"  selectedValue="{edited.about.id}" change="queueUpdate()"/>
                
				</mx:Box>
			</mx:ViewStack>
		</mx:HBox>		
	</mx:FormItem>
	<mx:FormItem id="formItemWhat" label="What">
		<mx:List id="listWhat" dataProvider="{topicList}" labelField="name"/>
	</mx:FormItem>
</mx:Form>
