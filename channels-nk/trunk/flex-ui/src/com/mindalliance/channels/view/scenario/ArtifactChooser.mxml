<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:search="com.mindalliance.channels.view.search.*" title="Choose artifacts"
	xmlns:common="com.mindalliance.channels.view.common.*"
	xmlns:scenario="com.mindalliance.channels.view.scenario.*"
	resizeEffect="Resize"
    creationComplete="init()">

	<mx:Script>
		<![CDATA[
			import com.mindalliance.channels.events.scenario.GetArtifactListEvent;
            import com.mindalliance.channels.events.common.ChooserSelectEvent;
            import com.mindalliance.channels.util.ElementHelper;
            import com.mindalliance.channels.vo.common.ElementVO;
            import com.mindalliance.channels.model.ElementListModel;
            import mx.managers.PopUpManager;
            import mx.collections.ArrayCollection;
            import com.mindalliance.channels.model.ChooserModel;
            import com.mindalliance.channels.model.ChannelsModelLocator;
            import com.mindalliance.channels.events.scenario.GetArtifactListEvent;
            import com.mindalliance.channels.events.scenario.GetArtifactEvent;
            import com.adobe.cairngorm.control.CairngormEventDispatcher;
			
			
            // Models
            [Bindable]
            private var channelsModel : ChannelsModelLocator = ChannelsModelLocator.getInstance();
            
            [Bindable]
            public var model : ChooserModel = channelsModel.getChooserModel();
            
            [Bindable]
            private var elementListModel : ElementListModel;
            
            [Bindable]
            public var filtered : ArrayCollection = null;
            
            [Bindable]
            public var processSelected : Function;

            
            private function getArtifactList() : void {
                CairngormEventDispatcher.getInstance().dispatchEvent( new GetArtifactListEvent(channelsModel.currentScenario.id) );
            }
            
            private function closeChooser():void {
                PopUpManager.removePopUp(this) ;
            }
            private function init(): void {
                model.editorModel = artifactEditor.model;
            }
            
            private function applyFilter(evt : Event = null) : void {
                 artifactList.refresh();    
            }
            
            private function filter(item : Object) : Boolean {
                var el : ElementVO = (item as ElementVO);
                if (filtered != null && ElementHelper.findElementById(el.id, filtered) != null) {
                    return false;   
                } else if (ElementHelper.findElementById(el.id, model.selection) != null) {
                    return false;
                } else if (searchBox.text != null && searchBox.text.length > 0 && el.name.match(searchBox.text) == null) {
                    return false;
                }
                return true;
            }
            
            private function loadEditor() : void {
                var el : ElementVO = (listArtifacts.selectedItem as ElementVO);
                var id : String = null;
                if (el != null) {
                    id = el.id;
                }
                CairngormEventDispatcher.getInstance().dispatchEvent( new GetArtifactEvent(id, model.editorModel));
            }
            
            private function addSelected() : void {
                CairngormEventDispatcher.getInstance().dispatchEvent( new ChooserSelectEvent(model, listArtifacts.selectedItems) );
                applyFilter();
                
            }
            
            private function done() : void {
                if (processSelected != null) {
                    processSelected(model.selection);
                }
                closeChooser();
            }
            
            private function showDetails() : void {
                if (cbShowDetails.selected) {
                    loadEditor();   
                }
            }
						
		]]>
	</mx:Script>
	<mx:Binding source="model.getElementListModel('artifacts')" destination="elementListModel"/>
    <mx:ArrayCollection id="artifactList" source="{elementListModel.data.source}" filterFunction="filter"/>
	<mx:VBox>
		<mx:VBox height="100%" width="100%">
			<search:StandardSearchBox  id="searchBox" width="100%" change="{applyFilter}"/>
			<mx:HBox verticalAlign="middle" height="100%" width="100%">
				<mx:List id="listArtifacts" dataProvider="{artifactList}" labelField="name" width="100%" height="100%" change="loadEditor()"/>
				<mx:VBox horizontalAlign="center">
					<mx:Button label=">>" enabled="{artifactList.length > 0}" toolTip="click to select" click="addSelected()"/>
				</mx:VBox>
				<mx:VBox height="100%" width="100%">
					<mx:Label text="Selected artifacts" fontWeight="bold"/>
					<mx:List id="listSelectedArtifacts"  labelField="name" height="100%" dataProvider="{model.selection}" change="applyFilter()"/>
					<common:RemoveButton enabled="{listSelectedArtifacts.selectedItems.length > 0}"/>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>
		<mx:CheckBox label="Show Detail" id="cbShowDetails" fontWeight="bold" change="showDetails()" enabled="{listArtifacts.selectedItem != null}"/>
		<scenario:ArtifactEditor id="artifactEditor" visible="{(cbShowDetails.selected)?(listArtifacts.selectedItem!=null) : false}" includeInLayout="{cbShowDetails.selected}" width="100%"/>
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Button label="Done" enabled="{artifactList.length > 0}" click="done()"/>
		<mx:Button label="Cancel" click="closeChooser()"/>
	</mx:ControlBar>
</mx:Panel>
