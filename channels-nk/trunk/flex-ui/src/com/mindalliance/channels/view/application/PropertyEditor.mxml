<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:view="com.mindalliance.channels.view.*"
    xmlns:scenario="com.mindalliance.channels.view.scenario.*"
    xmlns:people="com.mindalliance.channels.view.people.*"
    xmlns:resources="com.mindalliance.channels.view.resources.*"
    xmlns:application="com.mindalliance.channels.view.application.*"
    verticalScrollPolicy="off"
    horizontalScrollPolicy="off" 
    currentState="NothingSelectedState">
	<mx:states>
		<mx:State name="TaskNodeEditorState">
			<mx:AddChild position="lastChild">
				<application:TaskNodeEditor id="taskNodeEditor"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="RepositoryNodeEditorState">
			<mx:AddChild position="lastChild">
				<application:RepositoryNodeEditor id="repositoryEditor"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="NothingSelectedState">
			<mx:SetProperty name="enabled" value="false"/>
		</mx:State>
		<mx:State name="MultipleItemsSelectedState">
			<mx:SetProperty name="enabled" value="false"/>
		</mx:State>
		<mx:State name="EventNodeEditorState">
			<mx:AddChild position="lastChild">
				<scenario:EventEditor id="eventEditor"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="SharingNeedEditorState"/>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
			import com.mindalliance.channels.events.resources.GetRepositoryEvent;
			import com.mindalliance.channels.view.flowmap.RepositoryNodeData;
			import com.mindalliance.channels.events.scenario.GetEventEvent;
			import com.mindalliance.channels.view.flowmap.EventNodeData;
			import com.mindalliance.channels.util.CairngormHelper;
			import com.mindalliance.channels.events.scenario.GetTaskEvent;
			import com.mindalliance.channels.view.flowmap.TaskNodeData;
			import com.mindalliance.channels.view.flowmap.NodeData;
			import com.mindalliance.channels.view.flowmap.GraphMapperHelper;
			import com.mindalliance.channels.view.flowmap.FlowMapEvent;
			import com.yworks.graph.model.SelectionEvent;
			import com.yworks.graph.model.IEdge;
			import com.yworks.graph.model.INode;
			import com.yworks.support.Iterator;
			import com.mindalliance.channels.view.flowmap.FlowMap;
			import com.mindalliance.channels.model.application.PropertyEditorModel;

			[Bindable]
			private var model : PropertyEditorModel;
			
			private var mapperHelper:GraphMapperHelper ;
			
			private var _isEditing:Boolean = false ;
			
			[Bindable(event="changeIsEditing")] 
            public function get isEditing():Boolean {
                return _isEditing;
            }
            
            public function set isEditing(value:Boolean):void {
            	if (_isEditing != value) {
	            	_isEditing = value ;
    	        	dispatchEvent(new Event("changeIsEditing")) ;
    	        }
            }
		
			public function init():void {
				FlowMap.addSelectionListener(FlowMapEvent.ITEM_SELECTED, itemSelected) ;
				FlowMap.addSelectionListener(FlowMapEvent.ITEM_DESELECTED, itemDeselected) ;
				mapperHelper = GraphMapperHelper.getInstance() ;
			}
			
			private function itemSelected(event:SelectionEvent):void {
				if (FlowMap.numSelected > 1) {
					currentState = 'MultipleItemsSelectedState' ;
					return ;
				}
				if (event.item is INode) {
					var nd:NodeData = mapperHelper.nodeDataMapper.lookupValue(event.item) as NodeData ;
					if (!nd)
						return ;
					if (nd is TaskNodeData) {
						currentState = 'TaskNodeEditorState' ;
						taskNodeEditor.loadTask(TaskNodeData(nd).id) ;
					}
					else if (nd is EventNodeData) {
						currentState = 'EventNodeEditorState' ;
						var getEventEvent:GetEventEvent = new GetEventEvent(EventNodeData(nd).id, eventEditor.model) ;
						CairngormHelper.fireEvent(getEventEvent) ;
					}
					else if (nd is RepositoryNodeData) {
						currentState = 'RepositoryNodeEditingState' ;
						repositoryEditor.loadRepository(RepositoryNodeData(nd).id);
					}
				}
			}
		
			private function itemDeselected(event:SelectionEvent):void {
				if (FlowMap.numSelected == 0)
					currentState = '' ;
				else if (FlowMap.numSelected > 1)
					currentState = 'MultipleItemsSelectedState' ;
			}
			
		]]>
	</mx:Script>
	
</mx:VBox>