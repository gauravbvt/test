<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	showCloseButton="true"
	close="closeBrowser()"
	mouseDownOutside="closeBrowser()"
	creationComplete="initEditor()"
	xmlns:search="com.mindalliance.channels.view.search.*"
	xmlns:ui="com.mindalliance.channels.view.*"
	xmlns:common="com.mindalliance.channels.view.common.*"
	creationCompleteEffect="WipeDown">
	
	<mx:Script>
		<![CDATA[
			import com.mindalliance.channels.util.CairngormHelper;
			import com.mindalliance.channels.vo.common.ElementVO;
			import com.mindalliance.channels.vo.ProjectVO;
			import com.mindalliance.channels.vo.ScenarioVO;
			import com.mindalliance.channels.model.PermissionModel;
        	import com.mindalliance.channels.model.ChannelsModelLocator;
        	import com.mindalliance.channels.model.application.ProjectScenarioBrowserModel;
			import com.mindalliance.channels.events.application.*;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.mindalliance.channels.view.UtilFuncs;
			import mx.managers.PopUpManager;	
			import mx.controls.Alert;
		
            [Bindable]
 	        private var psbModel : ProjectScenarioBrowserModel = ChannelsModelLocator.getInstance().projectScenarioBrowserModel;
 	        
 	        [Bindable]
 	        private var permissions : PermissionModel = ChannelsModelLocator.getInstance().permissionModel;
 	        
 	        private function initEditor() : void {       	
 	        	getProjectList();
 	        }
 	        
 	        
 	        private function getProjectList() : void
 	        {
 	        	CairngormEventDispatcher.getInstance().dispatchEvent( new GetProjectListEvent() );
 	        }
 	        
 	        private function selectProject( ) : void
 	        {
 	        	var selected : Object = listProjects.selectedItem;
 	        	var id : String = (selected == null ? null : selected.id);
 	        	CairngormHelper.fireEvent( new GetProjectEvent( id ) );
 	        	CairngormHelper.fireEvent( new GetScenarioListEvent( id ) );
 	        }
 	        
 	        private function addProject(name : String) : void 
 	        {
				if (name != null) {
					CairngormHelper.fireEvent(new CreateProjectEvent(name));
				}
 	        }
 	        
 	        private function removeProject() : void
 	        {
 	        	CairngormHelper.fireEvent(new DeleteProjectEvent(psbModel.selectedProject.id));
 	        }
 	        
 	        private function queueProjectUpdate() : void
 	        {
 	        	CairngormHelper.fireEvent(new QueueProjectUpdateEvent());
 	        }
 	        
 	        private function updateProject(event : FocusEvent = null) : void
 	        {
         		CairngormHelper.fireEvent(new UpdateProjectEvent(new ProjectVO(psbModel.selectedProject.id,
         																					txtProjectName.text,
         																					txtProjectDescription.text)));	
 	        }
 	        
 	        private function updateScenario(event : FocusEvent = null) : void
 	        {
         		CairngormHelper.fireEvent(new UpdateScenarioEvent(new ScenarioVO(psbModel.selectedScenario.id,
 	        																					txtScenarioName.text,
 	        																					txtScenarioDescription.text,
 	        																					new ElementVO(psbModel.selectedProject.id,
 	        																					              psbModel.selectedProject.name))));	
 	        }
 	        
 	        private function selectScenario() : void
 	        {
 	        	var selected : Object = listScenarios.selectedItem;
 	        	var id : String = (selected == null ? null : selected.id);
 	        	
 	        	CairngormHelper.fireEvent( new GetScenarioEvent( id ) );
 	        }

 	        private function removeScenario() : void
 	        {
 	        	
 	        	CairngormHelper.fireEvent(new DeleteScenarioEvent(psbModel.selectedScenario.id));
 	        }
 	        
 	        private function addScenario(name : String) : void
 	        {
 	        	if (name != null) {
					CairngormHelper.fireEvent(new CreateScenarioEvent(name, psbModel.selectedProject.id));
				}	
 	        }
 	        private function queueScenarioUpdate() : void
 	        {
 	        	CairngormHelper.fireEvent(new QueueScenarioUpdateEvent());
 	        }
 	        private function loadScenario() : void 
 	        {
 	        	CairngormHelper.fireEvent( new LoadScenarioEvent(psbModel.selectedScenario.id) );
 	        	this.closeBrowser();
 	        }
 	         	        
 	        private function closeBrowser():void {
 	        	PopUpManager.removePopUp(this);
 	        }
 	        
		]]>
	</mx:Script>
	
	<mx:ArrayCollection id="ProjectManagers">
		<mx:Object Name="Mr. A"/>
		<mx:Object Name="Mr. B"/>
		<mx:Object Name="Mr. C"/>
	</mx:ArrayCollection>
	
	<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off" >
		<mx:HBox horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:VBox width="50%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="Projects" fontWeight="bold"/>
				<search:StandardSearchBox width="100%" visible="false" includeInLayout="false" id="searchBoxProject"/>
				<mx:VBox horizontalAlign="left" width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
					<mx:List id="listProjects" dataProvider="{psbModel.projectList}" labelField="name" width="100%" allowMultipleSelection="false" change="selectProject()"/>
					<mx:HBox>
						<common:AddButton visible="{permissions.canAddProject}" click="UtilFuncs.GetUserTextInput(this, addProject, 'Enter Project Name', true)"/>
						<common:RemoveButton visible="{permissions.canRemoveProject}" enabled="{psbModel.selectedProject!=null}" click="removeProject()"/>
					</mx:HBox>
				</mx:VBox>
				<mx:Form enabled="{psbModel.selectedProject != null}">
					<mx:FormItem label="Name">
						<mx:TextInput id="txtProjectName" text="{psbModel.selectedProject.name}" change="queueProjectUpdate()" focusOut="updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Description">
						<mx:TextArea id="txtProjectDescription" text="{psbModel.selectedProject.description}" change="queueProjectUpdate()" focusOut="updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Project manager" visible="false" includeInLayout="false">
						<!--This won't work properly because data providers are using generic objects. -->
						<mx:ComboBox id="comboProjectManager" dataProvider="{ProjectManagers}" labelField="Name" selectedIndex="{ProjectManagers.getItemIndex(psbModel.selectedProject.manager)}"/>
					</mx:FormItem>
					<mx:FormItem label="Participants" direction="vertical" visible="false" includeInLayout="false">
						<mx:List/>
						<mx:HBox>
							<common:AddButton />
							<common:RemoveButton/>
						</mx:HBox>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
			<mx:VBox width="50%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="Scenarios" fontWeight="bold"/>
				<search:StandardSearchBox width="100%" visible="false" includeInLayout="false"/>
				<mx:List dataProvider="{psbModel.scenarioList}" width="100%" id="listScenarios" labelField="name" change="selectScenario()"/>
				<mx:HBox>
					<common:AddButton visible="{permissions.canAddScenario}" click="UtilFuncs.GetUserTextInput(this, addScenario, 'Enter Scenario Name', true)"  enabled="{psbModel.selectedProject!=null}"/>
					<common:RemoveButton visible="{permissions.canRemoveScenario}" click="removeScenario()"  enabled="{psbModel.selectedScenario!=null}"/>
				</mx:HBox>
				<mx:Form enabled="{psbModel.selectedScenario != null}">
					<mx:FormItem label="Name">
						<mx:TextInput id="txtScenarioName" text="{psbModel.selectedScenario.name}" change="queueScenarioUpdate()" focusOut="updateScenario()"/>
					</mx:FormItem>
					<mx:FormItem label="Description">
						<mx:TextArea id="txtScenarioDescription" text="{psbModel.selectedScenario.description}"  change="queueScenarioUpdate()" focusOut="updateScenario()"/>
					</mx:FormItem>
					<mx:FormItem label="Story lines" visible="false" includeInLayout="false">
						<mx:List/>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Label text="{psbModel.selectedProject.name + ' > ' + psbModel.selectedScenario.name}"/>
		<mx:Button label="Load Scenario" enabled="{listScenarios.selectedItems.length == 1}" click="loadScenario()"/>
	</mx:ControlBar>	
</mx:TitleWindow>
