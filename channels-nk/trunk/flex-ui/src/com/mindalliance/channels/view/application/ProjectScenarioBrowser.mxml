<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	showCloseButton="true"
	close="closeBrowser()"
	mouseDownOutside="closeBrowser()"
	creationComplete="getProjectList(event)"
	xmlns:search="com.mindalliance.channels.view.search.*"
	xmlns:ui="com.mindalliance.channels.view.*"
	xmlns:common="com.mindalliance.channels.view.common.*">
	
	<mx:Script>
		<![CDATA[
        	import com.mindalliance.channels.model.ChannelsModelLocator;
        	import com.mindalliance.channels.model.ProjectScenarioBrowserModel;
			import com.mindalliance.channels.events.GetProjectListEvent;
			import com.mindalliance.channels.events.GetScenarioListEvent;
			import com.mindalliance.channels.events.GetScenarioEvent;
			import com.mindalliance.channels.events.GetProjectEvent;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.cairngorm.control.CairngormEvent;
			
			import mx.managers.PopUpManager;	
			import mx.controls.Alert;
		
            [Bindable]
 	        private var model : ProjectScenarioBrowserModel = ChannelsModelLocator.getInstance().projectScenarioBrowserModel;
 	        
 	        private function getProjectList(event : Event) : void
 	        {
 	        	CairngormEventDispatcher.getInstance().dispatchEvent( new GetProjectListEvent() );
 	        }
 	        
 	        private function selectProject( ) : void
 	        {
 	        	var selected : Object = listProjects.selectedItem;
 	        	var id : String = (selected == null ? null : selected.id);
 	        	CairngormEventDispatcher.getInstance().dispatchEvent( new GetProjectEvent( id ) );
 	        	CairngormEventDispatcher.getInstance().dispatchEvent( new GetScenarioListEvent( id ) );
 	        }
 	        
 	        private function selectScenario() : void
 	        {
 	        	var selected : Object = listScenarios.selectedItem;
 	        	var id : String = (selected == null ? null : selected.id);
 	        	
 	        	CairngormEventDispatcher.getInstance().dispatchEvent( new GetScenarioEvent( id ) );
 	        }
 	        
 	        private function closeBrowser():void {
 	        	PopUpManager.removePopUp(this);
 	        }

		    private function createProject() : void 
 	        {
 	        		
 	        }
 	        
 	        private function createScenario() : void
 	        {
 	        		
 	        }
 	        
		]]>
	</mx:Script>
	
	<mx:ArrayCollection id="ProjectManagers">
		<mx:Object Name="Mr. A"/>
		<mx:Object Name="Mr. B"/>
		<mx:Object Name="Mr. C"/>
	</mx:ArrayCollection>
	
	<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off" >
		<mx:HBox horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:VBox width="50%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="Projects" fontWeight="bold"/>
				<search:StandardSearchBox width="100%" visible="false" includeInLayout="false" id="searchBoxProject"/>
				<mx:VBox horizontalAlign="left" width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
					<mx:List id="listProjects" dataProvider="{model.projectList}" labelField="name" width="100%" allowMultipleSelection="false" change="selectProject()"/>
					<mx:HBox>
						<common:AddButton visible="{model.canAddProject}" click="Alert.show('mumble mumble')"/>
						<common:RemoveButton visible="{model.canRemoveProject}" enabled="{listProjects.selectedItems.length > 0}" click="model.projectList.removeItemAt(listProjects.selectedIndex)"/>
					</mx:HBox>
				</mx:VBox>
				<mx:Form enabled="{listProjects.selectedItem != null}">
					<mx:FormItem label="Name">
						<mx:TextInput text="{model.selectedProject.name}"/>
					</mx:FormItem>
					<mx:FormItem label="Description">
						<mx:TextArea text="{model.selectedProject.description}"/>
					</mx:FormItem>
					<mx:FormItem label="Project manager" visible="false" includeInLayout="false">
						<!--This won't work properly because data providers are using generic objects. -->
						<mx:ComboBox id="comboProjectManager" dataProvider="{ProjectManagers}" labelField="Name" selectedIndex="{ProjectManagers.getItemIndex(model.selectedProject.manager)}"
							change="model.selectedProject.manager = ProjectManagers.getItemAt(comboProjectManager.selectedIndex).Name"/>
					</mx:FormItem>
					<mx:FormItem label="Participants" direction="vertical" visible="false" includeInLayout="false">
						<mx:List/>
						<mx:HBox>
							<common:AddButton/>
							<common:RemoveButton/>
						</mx:HBox>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
			<mx:VBox width="50%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Label text="Scenarios" fontWeight="bold"/>
				<search:StandardSearchBox width="100%" visible="false" includeInLayout="false"/>
				<mx:List dataProvider="{model.scenarioList}" width="100%" id="listScenarios" labelField="name" change="selectScenario()"/>
				<mx:HBox>
					<common:AddButton visible="{model.canAddScenario}"/>
					<common:RemoveButton visible="{model.canRemoveScenario}"/>
				</mx:HBox>
				<mx:Form enabled="{model.selectedScenario != null}">
					<mx:FormItem label="Name">
						<mx:TextInput text="{model.selectedScenario.name}"/>
					</mx:FormItem>
					<mx:FormItem label="Description">
						<mx:TextArea text="{model.selectedScenario.description}"/>
					</mx:FormItem>
					<mx:FormItem label="Story lines" visible="false" includeInLayout="false">
						<mx:List/>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
	<mx:ControlBar horizontalAlign="right">
		<mx:Label text="{model.selectedProject.name + ' > ' + model.selectedScenario.name}"/>
		<mx:Button label="Load Scenario" enabled="{listScenarios.selectedItems.length == 1}"/>
	</mx:ControlBar>	
</mx:TitleWindow>
