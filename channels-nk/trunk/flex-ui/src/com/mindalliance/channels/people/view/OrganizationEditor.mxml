<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:common="com.mindalliance.channels.common.view.*" 
    implements="com.mindalliance.channels.common.view.IEditor"
	creationComplete="init()">
    
	<mx:Script>
		<![CDATA[ 
			import mx.collections.ArrayCollection;
			import com.mindalliance.channels.vo.OrganizationVO;
			import mx.binding.utils.ChangeWatcher;
			import com.mindalliance.channels.model.ElementModel;
			import com.mindalliance.channels.vo.common.AddressVO;
			import com.mindalliance.channels.vo.common.ElementVO;
			import com.mindalliance.channels.model.application.PropertyEditorModel;
			import com.mindalliance.channels.model.ChannelsModelLocator;
			import com.mindalliance.channels.model.EditorModel;
            import com.mindalliance.channels.people.events.*;
            import com.mindalliance.channels.common.events.*;
            import com.mindalliance.channels.util.CairngormHelper;
			
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			
			[Bindable]
			private var elementModel : ElementModel;
			
			[Bindable]
			private var edited : OrganizationVO;
			
			[Bindable]
			private var organizationList : ArrayCollection;
			
			private function switchToEditState():void {
				currentState = 'EditState' ;
			}
			
			private function confirmEdit():void {
				update();
				currentState = '' ;
			}
			
			private function cancelEdit():void {
				//revert
                CairngormHelper.fireEvent(new GetElementEvent(model.id,model));
				currentState = '' ;
			}
			
            [Bindable]
            public function get model() : EditorModel 
            {
                return _editorModel;
            }
            
            public function set model(model : EditorModel) : void 
            {
                this._editorModel = model;
            }
            public var _editorModel : EditorModel = ChannelsModelLocator.getInstance().getEditorModel();
            
			private function update() :void {
				var state : String;
				if (formitemAddress.comboUSStates.selectedItem != null) {
				    state = formitemAddress.comboUSStates.selectedItem.abbr;	
				}
				CairngormHelper.fireEvent( 
				                    new UpdateOrganizationEvent(model,
                                                                txtName.text,
                                                                txtDescription.text,
                                                                txtAbbrev.text,
                                                                new AddressVO(formitemAddress.txtStreet.text, 
                                                                            formitemAddress.txtCity.text, 
                                                                            state),
                                                                (comboOrganizations.selectedItem as ElementVO)));   
			}
			
			private function queueUpdate() : void {
				CairngormHelper.queueUpdate(model);
			}
			
			private function populateParentComboBox() : void {
				CairngormEventDispatcher.getInstance().dispatchEvent( new GetOrganizationListEvent() );
			}
			
			private function init():void {
                idChange(null); 
                ChangeWatcher.watch(model, "id",idChange);  
                populateParentComboBox();
			}
			private function idChange(evt : Event) : void {
                 CairngormHelper.fireEvent( new GetElementEvent(model.id,model));
			}
		]]>
	</mx:Script>
	
    <mx:Binding source="model.getElementModel(model.id)" destination="elementModel"/>
    <mx:Binding source="(elementModel.data as OrganizationVO)" destination="edited"/>
    <mx:Binding source="model.getElementListModel('organizations').data" destination="organizationList"/>
	
    <mx:states>
    	<mx:State name="EditState">
    		<mx:AddChild relativeTo="{viewEditStateChangeFormItem}" position="after">
    			<common:HintFieldRequiredFormItem/>
    		</mx:AddChild>
    		<mx:AddChild relativeTo="{formitemAbbrev}" position="firstChild">
		    	<mx:Label text="e.g.: NYPD" styleName="FormItemDescription"/>
    		</mx:AddChild>
    		<mx:SetProperty target="{txtName}" name="editable" value="true"/>
    		<mx:SetProperty target="{formitemName}" name="required" value="true"/>
    		<mx:SetProperty target="{formitemParentOrg}" name="mouseEnabled" value="true"/>
    		<mx:SetProperty target="{formitemParentOrg}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{formitemAddress}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{formitemAddress}" name="mouseChildren" value="true"/>
    		<mx:SetProperty target="{viewEditStateChangeFormItem}" name="currentState" value="EditState"/>
    	</mx:State>
    </mx:states>
    
    <mx:transitions>
    	<common:ViewEditStateTransition fromState="*" toState="*" targets="{[this]}"/>
    </mx:transitions>
    
    <mx:Style source="../../../../../assets/styles/FormStyles.css"/>
    
    <common:ViewEditStateChangeFormItem id="viewEditStateChangeFormItem"
    	btnEditClickHandler="{switchToEditState}"
    	confirmEditHandler="{confirmEdit}"
    	cancelEditHandler="{cancelEdit}"
    	enabled="{edited != null}"/>
    <mx:FormItem label="Name" required="false" id="formitemName">
        <mx:TextInput id="txtName" editable="{currentState=='EditState'}" text="{edited.name}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Abbreviation" direction="vertical" id="formitemAbbrev">
    	<mx:TextInput id="txtAbbrev" editable="{currentState=='EditState'}" text="{edited.abbreviation}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Description" id="formitemDescription">
        <mx:TextArea id="txtDescription" editable="{currentState=='EditState'}" text="{edited.description}" change="queueUpdate()"/>
    </mx:FormItem>
    <mx:FormItem label="Parent Organization" direction="vertical" mouseChildren="false" mouseEnabled="false" id="formitemParentOrg">
	<common:ElementComboBox id="comboOrganizations" dataProvider="{organizationList}" selectedValue="{edited.parent.id}" change="queueUpdate()"/>
    </mx:FormItem>
    <common:AddressEditor id="formitemAddress" change="{queueUpdate}" address="{edited.address}" mouseChildren="false" mouseEnabled="false"/>

</mx:Form>