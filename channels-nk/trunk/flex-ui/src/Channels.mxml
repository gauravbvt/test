<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	backgroundColor="0xFFFFFF"
	height="100%"
	width="100%"
	xmlns:flowmap="com.mindalliance.channels.view.flowmap.*"
	xmlns:timeline="com.mindalliance.channels.view.timeline.*" 
	xmlns:ui="com.mindalliance.channels.view.*" 
	xmlns:application="com.mindalliance.channels.view.application.*" 
	xmlns:geomap="com.mindalliance.channels.view.geomap.*"
	xmlns:control="com.mindalliance.channels.control.*"
	xmlns:business="com.mindalliance.channels.business.*"
	xmlns:common="com.mindalliance.channels.view.common.*"
	applicationComplete="init()" currentState="DashboardState">
	
  	<mx:states>
		<mx:State name="DashboardState">
			<mx:AddChild relativeTo="{vboxApplication}" position="lastChild">
				<mx:Box width="100%" height="100%" horizontalAlign="center">
					<application:ProjectScenarioBrowser currentState="DashboardState" id="projectScenarioBrowser"/>
				</mx:Box>
			</mx:AddChild>
		</mx:State>
		<mx:State name="InScenarioState">
			<mx:AddChild relativeTo="{vboxApplication}" position="lastChild">
				<mx:VBox width="100%" height="100%" paddingTop="10">
					<mx:HBox width="100%" horizontalAlign="left" verticalAlign="middle">
						<application:PropertyEditorDock id="propertyEditorDock"/>
						<application:ChannelsMenuBar creationComplete="channelsMenuBarCreationComplete()" enabled="false" id="channelsMenuBar"/>
						<mx:Spacer width="100%"/>
						<flowmap:FlowMapActions id="flowMapActions"/>
					</mx:HBox>
					<flowmap:FlowMapView id="flowmap" width="100%" height="100%" />
				</mx:VBox>
			</mx:AddChild>
			<mx:SetProperty target="{applicationToolBar}" name="currentState" value="InScenarioState"/>
		</mx:State>
	</mx:states>
	
    <mx:XML id="yFilesLicenseXML" source="../lib/license.xml"/>

    <mx:Script>
      <![CDATA[
      	import com.mindalliance.channels.events.application.LoadGlobalDataEvent;
      	import com.mindalliance.channels.events.scenario.GetAgentListByScenarioEvent;
      	import com.mindalliance.channels.view.application.ChannelsMenuBar;
      	import mx.controls.Alert;
      	import mx.binding.utils.ChangeWatcher;
      	import mx.events.StateChangeEvent;
      
      	import com.mindalliance.channels.events.people.GetPersonByUserEvent;
      	import com.mindalliance.channels.events.people.GetUserEvent;
      	import com.mindalliance.channels.events.resources.GetRepositoryListEvent;
      	import com.mindalliance.channels.events.people.GetPersonListEvent;
      	import com.mindalliance.channels.util.CairngormHelper;
      	import com.mindalliance.channels.model.ChannelsModelLocator;
           
        import com.mindalliance.channels.events.people.GetRoleListEvent;
        import com.mindalliance.channels.events.people.GetOrganizationListEvent;
        import com.adobe.cairngorm.control.CairngormEventDispatcher;
        import com.yworks.util.Util;
      
      	public static const STATE_DASHBOARD:String = 'DashboardState' ;
      	
      	public static const STATE_IN_SCENARIO:String = 'InScenarioState' ;
      
      	protected function handleStateChanged(event:StateChangeEvent):void {
      		switch (event.newState) {
      			case Channels.STATE_IN_SCENARIO:
      				scenarioLoaded() ;
      			break ;
      		}
      	}
      	
      	protected function handleApplicationToolBarStateChanged(event:StateChangeEvent):void {
      		switch (event.newState) {
      			case Channels.STATE_DASHBOARD:
      				currentState = Channels.STATE_DASHBOARD ;
      			break ;
      			case Channels.STATE_IN_SCENARIO :
      				currentState = Channels.STATE_IN_SCENARIO ;
      			break ;
      		}
      	}
      	
      	private function scenarioLoaded():void {
      		flowmap.init() ;
      		flowMapActions.init() ;
      		
			// Load global data lists
			CairngormHelper.fireEvent(new LoadGlobalDataEvent());
      	}
      	
      	private function channelsMenuBarCreationComplete():void {
      		flowmap.requestHandlerRegistration(channelsMenuBar) ;
      		channelsMenuBar.enabled = true ;
      	}
      
        private function init():void {
			Util.registerLicense( yFilesLicenseXML );
			this.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE, handleStateChanged) ;
			applicationToolBar.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE, handleApplicationToolBarStateChanged) ;
			CairngormHelper.fireEvent( new GetUserEvent("user1") );
			CairngormHelper.fireEvent( new GetPersonByUserEvent("user1") ) ;
		}
		
        [Bindable]
        private var model : ChannelsModelLocator = ChannelsModelLocator.getInstance();
       
      ]]>
	 </mx:Script>
    
       	<!--<business:Services id="services" />-->
	<control:ChannelsController id="appController" />

    <mx:VBox width="100%" height="100%" id="vboxApplication">
	    <application:ApplicationToolBar id="applicationToolBar"/>
	</mx:VBox>
     
</mx:Application>
