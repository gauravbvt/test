<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	height="100%"
	width="100%"
	xmlns:flowmap="com.mindalliance.channels.flowmap.view.*"
	xmlns:timeline="com.mindalliance.channels.timeline.view.*" 
	xmlns:ui="com.mindalliance.channels.view.*" 
	xmlns:application="com.mindalliance.channels.application.view.*" 
	xmlns:geomap="com.mindalliance.channels.geomap.view.*"
	xmlns:control="com.mindalliance.channels.application.control.*"
	xmlns:business="com.mindalliance.channels.business.*"
	xmlns:common="com.mindalliance.channels.common.view.*"
	applicationComplete="init()" 
	currentState="{applicationToolBar.currentState}"
	backgroundGradientColors="[#FFFFFF, #FFFFFF]" paddingRight="5" paddingTop="5" paddingLeft="5" paddingBottom="5"
	layout="vertical"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	visible="false"
	showEffect="{fadeIn}">

	<mx:Style>
		Form {
			paddingLeft : 4 ;
			paddingTop : 4 ;
			paddingRight : 6 ;
			paddingBottom : 4 ;
		}
	</mx:Style>
	
  	<mx:states>
		<mx:State name="DashboardState">
			<mx:AddChild position="lastChild">
				<mx:Box width="100%" height="100%" horizontalAlign="center">
					<application:ProjectScenarioBrowser currentState="DashboardState" id="projectScenarioBrowser"/>
				</mx:Box>
			</mx:AddChild>
		</mx:State>
		<mx:State name="InScenarioState">
			<mx:AddChild position="lastChild">
				<application:ChannelsMenuBar 
					creationComplete="channelsMenuBarCreationComplete()" 
					id="channelsMenuBar"
					width="100%"
					enabled="{!propertyEditor.isEditing}"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:HDividedBox width="100%" height="100%" 
					borderStyle="solid" borderColor="#909090"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="off">
					<mx:Box height="{vBoxFlowMap.height}"
						horizontalScrollPolicy="off"
						id="vBoxPropertyEditor">
						<!--<mx:HBox horizontalScrollPolicy="off" verticalScrollPolicy="off" 
							horizontalAlign="right" height="{flowMapActions.height}"
							borderStyle="solid" borderColor="#909090" borderSides="bottom"
							paddingTop="5" width="100%">
							<common:PushPinToggleButton id="pushPin"/>
						</mx:HBox>-->
						<application:PropertyEditor id="propertyEditor" 
							resizeToContent="true"/>
					</mx:Box>
					<mx:VBox width="100%" height="100%"
						borderStyle="solid" borderColor="#909090" borderSides="left" 
						id="vBoxFlowMap"
						enabled="{!propertyEditor.isEditing}">
						<!--<flowmap:FlowMapActions id="flowMapActions" width="100%"
							borderStyle="solid" borderColor="#909090" borderSides="bottom"
							paddingTop="5"/>
						<flowmap:FlowMapView id="flowmapview" width="100%" height="100%"/>-->
					</mx:VBox>
				</mx:HDividedBox>
			</mx:AddChild>
			<mx:SetProperty target="{applicationToolBar}" name="currentState" value="InScenarioState"/>
		</mx:State>
	</mx:states>
	
	<mx:Dissolve alphaTo="1.0" id="fadeIn" duration="1000"/>
	
    <mx:XML id="yFilesLicenseXML" source="../lib/license.xml"/>

    <mx:Script>
      <![CDATA[
      	import mx.events.ResizeEvent;
      	import mx.binding.utils.BindingUtils;
      	import com.mindalliance.channels.application.events.LoadGlobalDataEvent;
      	import com.mindalliance.channels.scenario.events.GetAgentListByScenarioEvent;
      	import com.mindalliance.channels.application.view.ChannelsMenuBar;
      	import mx.controls.Alert;
      	import mx.binding.utils.ChangeWatcher;
      	import mx.events.StateChangeEvent;
      
      	import com.mindalliance.channels.people.events.GetPersonByUserEvent;
      	import com.mindalliance.channels.people.events.GetUserEvent;
      	import com.mindalliance.channels.resources.events.GetRepositoryListEvent;
      	import com.mindalliance.channels.people.events.GetPersonListEvent;
      	import com.mindalliance.channels.util.CairngormHelper;
      	import com.mindalliance.channels.model.ChannelsModelLocator;
           
        import com.mindalliance.channels.people.events.GetRoleListEvent;
        import com.mindalliance.channels.people.events.GetOrganizationListEvent;
        import com.adobe.cairngorm.control.CairngormEventDispatcher;
        import com.yworks.util.Util;
      
      	public static const STATE_DASHBOARD:String = 'DashboardState' ;
      	
      	public static const STATE_IN_SCENARIO:String = 'InScenarioState' ;
      
      	protected function handleStateChanged(event:StateChangeEvent):void {
      		switch (event.newState) {
      			case Channels.STATE_IN_SCENARIO:
      				scenarioLoaded() ;
      			break ;
      		}
      	}
      	
      	private function scenarioLoaded():void {
      		//flowmapview.init() ;
      		//flowMapActions.init(flowmapview.flowmap) ;
			//propertyEditor.flowmap = flowmapview.flowmap ;
			
			// Load global data lists
			CairngormHelper.fireEvent(new LoadGlobalDataEvent());
			
			setupResizeWatcher() ;
      	}
      	
      	private function channelsMenuBarCreationComplete():void {
      		//flowMapActions.requestHandlerRegistration(channelsMenuBar) ;
      	}
      
        private function init():void {
			//Util.registerLicense( yFilesLicenseXML );
			this.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE, handleStateChanged) ;
			CairngormHelper.fireEvent( new GetUserEvent("user1") );
			CairngormHelper.fireEvent( new GetPersonByUserEvent("user1") ) ;
			
			visible = true ;
		}
	
		public function set pushPinToggled(isPinned:Boolean):void {
			if (isPinned)
				tearDownResizeWatcher() ;
			else
				setupResizeWatcher(); 
		}
	
		private var _resizeChangeWatcher:ChangeWatcher ;	
		protected function setupResizeWatcher():void {
			_resizeChangeWatcher = BindingUtils.bindProperty(vBoxPropertyEditor, 'width', propertyEditor, ["selectedChild", "width"]) ;
		}
		
		protected function tearDownResizeWatcher():void {
			_resizeChangeWatcher.unwatch() ;
		}
						
        [Bindable]
        private var model : ChannelsModelLocator = ChannelsModelLocator.getInstance();
       
      ]]>
	 </mx:Script>
    
       	<!--<business:Services id="services" />-->
	<control:ChannelsController id="appController" />

    <application:ApplicationToolBar id="applicationToolBar"/>
    
    <!--<mx:Binding source="pushPin.isPinned" destination="pushPinToggled"/>-->
     
</mx:Application>
