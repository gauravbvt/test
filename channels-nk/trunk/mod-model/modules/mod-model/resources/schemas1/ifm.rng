<?xml version="1.0" encoding="UTF-8"?>
<grammar 
      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" 
      xmlns="http://relaxng.org/ns/structure/1.0"
      datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  
  <!-- - - - - - - TYPES - - - - - - -# -->
  <define name="type_unique">
    <a:documentation>A unique object that can be referred to from somewhere else.</a:documentation>
    <attribute name="id">
      <a:documentation>GUID</a:documentation>
      <data type="ID"/>
    </attribute>
  </define>
  <define name="type_named">
    <a:documentation>Something with a required name</a:documentation>
    <element name="name">
      <data type="normalizedString"/>
    </element>
  </define>
  <define name="type_described">
    <a:documentation>Something that may be described</a:documentation>
    <interleave>
      <optional>
        <element name="description">
          <a:documentation>constraint: not empty</a:documentation>
          <text/>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="type_conceptualized">
    <a:documentation>Something with a sense</a:documentation>
    <ref name="sense"/>
  </define>
  <define name="type_categorized">
    <a:documentation>That which has an information content specified by a set of categories.</a:documentation>
    <zeroOrMore>
       <ref name="category"/>
    </zeroOrMore>
  </define>
  <define name="type_documented">
    <a:documentation>That which is defined, discussed etc. in fragments of linked documents.</a:documentation>
    <zeroOrMore>
      <element name="reference">
        <interleave>
          <element name="url">
            <data type="anyURI"/>
          </element>
          <zeroOrMore>
            <ref name="fragment"/>
          </zeroOrMore>
          <optional>
            <element name="summary">
              <text/>
            </element>
          </optional>
        </interleave>
      </element>
    </zeroOrMore>
  </define>
  <define name="type_located">
    <a:documentation>That which is located somewhere on the planet.</a:documentation>
    <interleave>
      <optional>
        <element name="geoname">
          <a:documentation>a geonames ID (see http://www.geonames.org/)</a:documentation>
          <text/>
        </element>
      </optional>
      <optional>
        <ref name="address"/>
      </optional>
      <optional>
        <ref name="latlong"/>
      </optional>
    </interleave>
  </define>
  <!-- - - - - - - - COMPONENTS - - - - - - -# -->
  <define name="sense">
    <element name="sense">
      <a:documentation>A synset in wordnet. See http://wordnet.princeton.edu/perl/webwn</a:documentation>
        <text/>
    </element>
  </define>
  <define name="address">
    <a:documentation>A postal address.</a:documentation>
    <element name="address">
      <interleave>
        <choice>
          <oneOrMore>            
            <element name="line">
              <text/>
            </element>
          </oneOrMore>
          <element name="postOfficeBox">
            <text/>
          </element>
        </choice>
        <element name="city">
          <text/>
        </element>
        <element name="stateOrProvince">
          <text/>
        </element>
        <element name="country">
          <text/>
        </element>
        <optional>
          <element name="code">
            <a:documentation>zip, postalCode etc.</a:documentation>
            <text/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="level">
    <a:documentation>A rating of low, medium or high.</a:documentation>
    <element name="level">
      <choice>
        <value>low</value>
        <value>medium</value>
        <value>high</value>
      </choice>
    </element>
  </define>
  <define name="fragment">
    <a:documentation>The identifier of a segment of a document.</a:documentation>
    <choice>
      <element name="anchorTag">
        <a:documentation>an HTML anchor tag</a:documentation>
        <text/>
      </element>
      <element name="section">
        <a:documentation>a free-form specification of a section in a document</a:documentation>
        <text/>
      </element>
    </choice>
  </define>
  <define name="specification">
    <a:documentation>A list of one or more categories together specifying an entity.</a:documentation>
    <element name="specification">
      <ref name="type_categorized"/>
    </element>
  </define>
  <define name="aspect">
    <a:documentation>An aspect of an entity being described.</a:documentation>
    <element name="aspect">
      <a:documentation>If an information were a form, an aspect would be a section in the form</a:documentation>
      <interleave>
        <element name="isSet">
          <a:documentation>this aspect can be repeated (e.g. 'victim' in an accident event)</a:documentation>
          <data type="boolean"/>
        </element>
        <ref name="type_conceptualized">
          <a:documentation>the sense of the aspect</a:documentation>
        </ref>
        <zeroOrMore>
          <a:documentation>elements of information</a:documentation>
          <ref name="eoi"/>
        </zeroOrMore>
        <zeroOrMore>
          <a:documentation>sub-aspects</a:documentation>
          <ref name="aspect"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="eoi">
    <a:documentation>Element of information about an entity or an aspect of an entity.</a:documentation>
    <element name="eoi">
      <a:documentation>If an information were a form, an eoi would be a field (maybe pre-filled)</a:documentation>
      <interleave>
        <optional><element name="isOfSet">
          <a:documentation>whether attribute is of the entire set of repeated aspects (e.g. victim count) or of an individual aspect (e.g. victim age).
          Default: false</a:documentation>
          <data type="boolean"/>
        </element>
        </optional><ref name="type_conceptualized">
          <a:documentation>the sense of the eoi</a:documentation>
        </ref>
        <element name="type">
          <a:documentation>what kind of value the eoi can take. Specifid as a WordNet 3.0 sense ID</a:documentation>
          <data type="normalizedString"></data>
        </element>
        <optional>
          <element name="value">
            <a:documentation>When no value is given, the eoi acts as a specification of needed or known 'data'.</a:documentation>
            <text/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="information">
    <a:documentation>What can be known and communicated about an entity.
      An information should be thought of as a 'template' or 'pattern' specifying a set of 'actual information'.
    </a:documentation>
    <element name="information">
      <zeroOrMore>
        <choice>
            <ref name="eoi"/>
            <ref name="aspect"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="timeUnit">
    <a:documentation>A time measurement unit</a:documentation>
    <element name="unit">
      <choice>
        <value>week</value>
        <value>day</value>
        <value>hour</value>
        <value>minute</value>
        <value>second</value>
      </choice>
    </element>
  </define>
  <define name="duration">
    <a:documentation>An expected length of time in some units, possibly with best and worst cases.</a:documentation>
    <element name="duration">
      <interleave>
        <ref name="timeUnit"/>
        <element name="expected">
          <data type="double"/>
        </element>
        <optional>
          <!-- the "average" value -->
          <element name="bestCase">
            <data type="double"/>
          </element>
        </optional>
        <optional>
          <!-- realistic best case -->
          <element name="worstCase">
            <data type="double"/>
          </element>
        </optional>
      </interleave>
      <!-- realistic worst case -->
    </element>
  </define>
  <define name="latlong">
    <a:documentation>A point in space specified by latitude and longitude.</a:documentation>
    <element name="latlong">
      <interleave>
        <element name="latitude">
          <data type="double"/>
        </element>
        <element name="longitude">
          <data type="double"/>
        </element>
      </interleave>
    </element>
  </define>
  <define name="abstract_message">
    <a:documentation>The information content of a transmission. A message encodes (formats) and possibly encrypts information.</a:documentation>
    <interleave>
      <optional>
        <ref name="encryption"/>
      </optional>
      <ref name="information"/>
      <optional>
        <ref name="format"/>
      </optional>
    </interleave>
  </define>
  <define name="encryption">
    <a:documentation>The kind of encryption</a:documentation>
    <element name="encryption">
      <ref name="type_conceptualized"/>
    </element>
  </define>
  <define name="updating">
    <a:documentation>Specifications of standing request for updates</a:documentation>
    <element name="updating">
      <a:documentation>optional standing request to follow-up response with updates</a:documentation>
      <interleave>
        <choice>
          <element name="onChange">
            <a:documentation>whenever the information last sent is obsolete</a:documentation>
            <empty/>
          </element>
          <element name="every">
            <a:documentation>at a regular interval</a:documentation>
            <ref name="duration"/>
          </element>
          <element name="when">
            <a:documentation>at certain times</a:documentation>
            <ref name="timing"/>
          </element>
        </choice>
        <optional>
          <element name="until">
            <a:documentation>stop updating when some event starts or ends</a:documentation>
            <interleave>
              <element name="boundary">
                <choice>
                  <value>start</value>
                  <value>end</value>
                </choice>
              </element>
              <ref name="event"/>
            </interleave>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="abstract_request">
    <a:documentation>A request for information or for execution of a task.</a:documentation>
    <interleave>
      <ref name="abstract_message"/>
      <optional>
        <element name="maxResponseDelay">
          <a:documentation>urgency quantified</a:documentation>
          <ref name="duration"/>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="abstract_response">
    <a:documentation>A response to a request.</a:documentation>
    <interleave>
      <ref name="abstract_message"/>
      <optional>
        <ref name="transmission">
          <a:documentation>Constraint: the transmission must be prior and with the right kind of request message (query -> answer, notif. request -> notification).
              Constraint: the information in the message is composed from the 'informations' attached to the categories specifying the task.
          </a:documentation>
        </ref>
      </optional>
    </interleave>
  </define>
  <define name="taskRequest">
    <a:documentation>A request to an agent to execute some kind of task.</a:documentation>
    <element name="taskRequest">
      <interleave>
        <ref name="abstract_request"/>
        <element name="toAgent">
          <ref name="agent"/>
        </element>
        <element name="taskSpecification">
          <a:documentation>constraint: taxonomy is "task#1"</a:documentation>
          <ref name="specification"/>
        </element>
      </interleave>
    </element>
  </define>
  <define name="notificationRequest">
    <a:documentation>A request to be notified about specified events.</a:documentation>
    <element name="notificationRequest">
      <interleave>
        <ref name="abstract_request"/>
        <optional>
          <ref name="updating">
            <a:documentation>whether to notify of updates</a:documentation>
          </ref>
        </optional>
        <element name="eventSpecification">
          <ref name="specification">
            <a:documentation>constraint: taxonomy is "event#1"</a:documentation>
          </ref>
        </element>
        <zeroOrMore>
          <ref name="contactPoint">
            <a:documentation>requested points of contact for notification</a:documentation>
          </ref>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="query">
    <a:documentation>A request for information presumably already being held by an agent.</a:documentation>
    <element name="query">
      <interleave>
        <ref name="abstract_request"/>
        <optional>
          <ref name="updating"/>
        </optional>
      </interleave>
      <!-- whether to notify of updates -->
    </element>
  </define>
  <define name="notification">
    <a:documentation>A notification of an event.</a:documentation>
    <element name="notification">
      <interleave>
        <ref name="abstract_response"/>
        <element name="event">
          <ref name="event">
            <a:documentation>The event the notification is about.
              constraint: the information must be about the event (composed from informations attached to categories the event is tagged with)
            </a:documentation>
          </ref>
        </element>
      </interleave>
    </element>
  </define>
  <define name="answer">
    <a:documentation>A response to a query.</a:documentation>
    <element name="answer">
      <ref name="abstract_response"/>
      <!-- and? -->
    </element>
  </define>
  <define name="update">
    <a:documentation>An update to the information in a prior answer or notification.</a:documentation>
    <element name="update">
      <ref name="abstract_response"/>
      <!-- and? -->
    </element>
  </define>
  <define name="message">
    <a:documentation>A message of some kind</a:documentation>
    <choice>
      <ref name="taskRequest"/>
      <ref name="notificationRequest"/>
      <ref name="query"/>
      <ref name="notification"/>
      <ref name="answer"/>
      <ref name="update"/>
    </choice>
  </define>
  <define name="cause">
    <a:documentation>The cause of the start or end of an event with some probability and delay.</a:documentation>
    <element name="cause">
      <interleave>
        <element name="boundary">
          <a:documentation>whether the start or end of an event is the actual cause</a:documentation>
          <choice>
            <value>start</value>
            <value>end</value>
          </choice>
        </element>
        <optional>
          <ref name="event">
            <a:documentation>The causing event</a:documentation>
          </ref>
        </optional>
        <optional>
          <element name="delay">
            <ref name="duration"/>
          </element>
        </optional>
        <optional>
          <!-- default is 0 -->
          <element name="probability">
            <data type="double"/>
          </element>
        </optional>
      </interleave>
      <!-- between 0 and 1 incl. -->
    </element>
  </define>
  <define name="valuation">
    <a:documentation>A valuation as monetary value or rating.</a:documentation>
    <element name="valuation">
      <interleave>
        <element name="type">
          <choice>
            <value>money</value>
            <value>rating</value>
          </choice>
        </element>
        <element name="value">
          <data type="double"/>
        </element>
        <optional>
          <element name="unit">
            <a:documentation>defaults to USD for "money"</a:documentation>
            <text/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="timing">
    <a:documentation>A recurrent moment in time.</a:documentation>
    <element name="timing">
      <interleave>
        <optional>
          <element name="negated">
            <data type="boolean"/>
          </element>
        </optional>
        <optional>
          <!-- default is false -->
          <element name="months">
            <list>
              <choice>
                <value>January</value>
                <value>February</value>
                <value>March</value>
                <value>April</value>
                <value>May</value>
                <value>June</value>
                <value>July</value>
                <value>August</value>
                <value>September</value>
                <value>October</value>
                <value>November</value>
                <value>December</value>
              </choice>
            </list>
          </element>
        </optional>
        <optional>
          <!-- None means all -->
          <choice>
            <element name="weekDays">
              <list>
                <choice>
                  <value>Sunday</value>
                  <value>Monday</value>
                  <value>Tuesday</value>
                  <value>Wednesday</value>
                  <value>Thursday</value>
                  <value>Friday</value>
                  <value>Saturday</value>
                </choice>
              </list>
            </element>
            <!-- none means all -->
            <element name="calendarDays">
              <list>
                <data type="int"/>
              </list>
            </element>
          </choice>
          <!-- 1 to 31 - none means all calendar days -->
        </optional>
        <optional>
          <element name="hours">
            <interleave>
              <element name="from">
                <data type="int"/>
              </element>
              <!-- 0-23 -->
              <element name="to">
                <data type="int"/>
              </element>
            </interleave>
            <!-- 0-23 -->
          </element>
        </optional>
        <optional>
          <!-- none means all hours -->
          <element name="minutes">
            <interleave>
              <element name="from">
                <data type="int"/>
              </element>
              <!-- 0-59 -->
              <element name="to">
                <data type="int"/>
              </element>
            </interleave>
            <!-- 0-59 -->
          </element>
        </optional>
      </interleave>
      <!-- none means whole hours -->
    </element>
  </define>
  <define name="timePeriod">
      <choice>
        <element name="always"><empty/></element>
        <group>
          <optional>
            <choice>
              <element name="January"><empty/></element>
              <element name="February"><empty/></element>
              <element name="March"><empty/></element>
              <element name="April"><empty/></element>
              <element name="May"><empty/></element>
              <element name="June"><empty/></element>
              <element name="July"><empty/></element>
              <element name="August"><empty/></element>
              <element name="September"><empty/></element>
              <element name="October"><empty/></element>
              <element name="November"><empty/></element>
              <element name="December"><empty/></element>
            </choice>
          </optional>
          <optional>
            <element name="days">
              <element name="from"><data type="gDay"></data></element>
              <element name="to"><data type="gDay"></data></element>
            </element>
          </optional>
          <optional>
            <group>
              <optional>
                <choice>
                  <element name="first"><empty/></element>
                  <element name="second"><empty/></element>
                  <element name="third"><empty/></element>
                  <element name="fourth"><empty/></element>
                </choice>    
              </optional>
              <choice>
                <element name="sundays"><empty/></element>
                <element name="mondays"><empty/></element>
                <element name="tuesdays"><empty/></element>
                <element name="wednesdays"><empty/></element>
                <element name="thursdays"><empty/></element>
                <element name="fridays"><empty/></element>
                <element name="saturdays"><empty/></element>
              </choice>
            </group>
          </optional>
          <optional>
            <element name="hours">
              <element name="from"><data type="time"/></element>
              <element name="to"><data type="time"/></element>
            </element>
          </optional>
        </group>
      </choice>
  </define>
  <define name="availability">
    <a:documentation>The timing of  the availability of a resource.</a:documentation>
    <element name="availability">
      <oneOrMore>
        <choice>
          <element name="include">
              <ref name="timePeriod"/>
          </element>
          <element name="exclude">
            <ref name="timePeriod"/>
          </element>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <define name="reliability">
    <a:documentation>The level of reliability of a resource.</a:documentation>
    <element name="reliability">
      <ref name="level"/>      
    </element>
  </define>
  <!-- - - - - - ELEMENTS- - - - - -# -->
  <define name="abstract_model_element">
    <a:documentation>A uniquely identified element of an information flow model.</a:documentation>
    <interleave>
      <ref name="type_unique"/>
      <ref name="type_described"/>
      <zeroOrMore>
        <element name="note">
          <a:documentation>Links to interview data collected about this element.
          </a:documentation>
          <data type="anyURI"/>
        </element>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="abstract_entity">
    <a:documentation>A separate and self-contained thus identifiable model element that can be known to an agent.</a:documentation>
    <interleave>
      <ref name="abstract_model_element"/>
      <ref name="type_categorized"/>
    </interleave>
  </define>
  <define name="abstract_thing">
    <a:documentation>Definition shared by all things</a:documentation>
    <interleave>
      <ref name="abstract_entity"/>
      <optional>
        <element name="scope">
          <a:documentation>default scope is model</a:documentation>
          <choice>
            <ref name="scenario"/>
            <ref name="event"/>
          </choice>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="abstract_category">
    <interleave>
      <ref name="abstract_model_element"/>
      <ref name="type_conceptualized"/>
      <optional>
        <ref name="information"/>
      </optional>
    </interleave>
  </define>
  <define name="abstract_event">
    <a:documentation>Something of significance being true somewhere for some time in a scenario. A cost/benefit valuation can be attached to an event.</a:documentation>
    <interleave>
      <optional>
        <ref name="scenario"/>          
      </optional>
      <ref name="type_named"/>
      <ref name="abstract_entity"/>
      <optional>
        <ref name="type_located">
          <a:documentation>default is 'everywhere'</a:documentation>
        </ref>
      </optional>
      <optional>
        <ref name="valuation">
          <a:documentation>default is 0 / unknown</a:documentation>
        </ref>
      </optional>
    </interleave>
  </define>
  <define name="abstract_linkedEvent">
    <a:documentation>Definition shared by all linked events</a:documentation>
    <interleave>
      <ref name="abstract_event"/>
      <optional>
        <element name="trigger">
          <a:documentation>what triggers the event (default is start of scenario)</a:documentation>
          <ref name="cause"/>
        </element>
      </optional>
      <optional>
        <element name="terminator">
          <a:documentation>
            what terminates the event (optional)
            this event is mutually exclusive with other events in the same named group.
          </a:documentation>
          <ref name="cause"/>
        </element>
      </optional>
      <optional>
        <element name="mutualExclusionGroup">
          <a:documentation>constraint: the event boundary that triggers all events in the group must be the same and the sum of their trigger probabilities must be &lt;= 1</a:documentation>
          <text/>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="abstract_task">
    <a:documentation>Definition shared by all tasks</a:documentation>
    <interleave>
      <ref name="abstract_linkedEvent"/>
      <ref name="agent">
        <a:documentation>the agent doing the task; could a team created by and for the task</a:documentation>
      </ref>
    </interleave>
  </define>
  <define name="abstract_resource">
    <a:documentation>Definition shared by all resources. A resource is an entity of some usefulness or capability that can be involved in an event either as agent or as a necessity</a:documentation>
    <interleave>
      <optional>
        <ref name="type_named"/>
      </optional>
      <ref name="abstract_thing"/>
      <ref name="type_located"/>
      <ref name="type_documented"/>
      <ref name="availability"/>
      <optional>
        <ref name="reliability"/>
      </optional>
      <optional>
        <element name="maintenanceCost">
          <a:documentation>how much it costs to keep the resource operational</a:documentation>
          <interleave>
            <ref name="valuation"/>
            <ref name="timeUnit"/>
          </interleave>
        </element>
      </optional>
      <ref name="organization">
        <a:documentation>the organization that manages this resource</a:documentation>
      </ref>
    </interleave>
  </define>
  <define name="abstract_artifact">
    <a:documentation>Definition shared by all artifacts</a:documentation>
    <interleave>
      <ref name="abstract_resource"/>
      <optional>
        <element name="controlledByAgent">
          <a:documentation>The agent who controls (owns, is responsible for...) the artifact</a:documentation>
          <text/>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="abstract_service">
    <a:documentation>Definition shared by all services</a:documentation>
    <interleave>
      <ref name="abstract_resource"/>
      <zeroOrMore>
        <element name="administeredBy">
          <a:documentation>agent who administers the service</a:documentation>
          <ref name="agent"/>
        </element>
      </zeroOrMore>
    </interleave>
  </define>
  <define name="abstract_fact">
    <a:documentation>Something immaterial that, by being true, might impact, prevent, allow or motivate communications.</a:documentation>
    <ref name="abstract_thing"/>
  </define>
  <!-- .....Concrete....# -->
  <define name="model_element">
    <choice>
      <ref name="category"/>
      <ref name="scenario"/>
      <ref name="entity"/>
    </choice>
  </define>
  <div>
    <define name="category">
      <a:documentation>An association between a sense and information.
        The most generic hypernym allowed for all categories referenced.
        Constraint: category's sense is hyponym of taxonomy sense.
      </a:documentation>
      <choice>
        <ref name="format"/>
        <ref name="role"/>
        <ref name="mission"/>
        <element name="category">
          <choice>
            <attribute name="ref"><data type="IDREF"/></attribute>
            <ref name="abstract_category"/>
          </choice>
        </element>      
      </choice>
    </define>    
    <define name="format">
      <a:documentation>An information encoding format. A format may be compatible with other formats.</a:documentation>
      <element name="format">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_category"/>
            <a:documentation>constraint: taxonomy is format#1</a:documentation>
            <optional>
              <element name="mimetype"><data type="string"/></element>
            </optional>
            <optional>
              <element name="compatibleFormats">
                <oneOrMore>
                  <ref name="format"/>
                </oneOrMore>
              </element>
            </optional>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="role">
      <a:documentation>A generic role that can be played by agents. A role sets expections about expertise and defines responsibilities.</a:documentation>
      <element name="role">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_category"/>
            <zeroOrMore>
              <ref name="mission"/>
            </zeroOrMore>
            <zeroOrMore>
              <element name="responsibility">
                <element name="trigger">
                  <ref name="event"/>
                </element>
                <element name="response">
                  <ref name="task"/>
                </element>
              </element>
            </zeroOrMore>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="mission">
      <a:documentation>The generic goals an organization or an agent in a role aspires to achieve.</a:documentation>
      <element name="mission">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_category"/>
            <a:documentation>Constraint: at least one child appears</a:documentation>
            <optional>
              <element name="canFurther">
                <oneOrMore><ref name="mission"/></oneOrMore>
              </element>
            </optional>
            <optional>
              <element name="canOppose">
                <oneOrMore><ref name="mission"/></oneOrMore>
              </element>
            </optional>
          </interleave>
        </choice>
      </element>
    </define>
  </div>
  <define name="scenario">
    <a:documentation>A scenario is a set of potential events that cause other events and motivate information flows (sequences of transmissions of information).</a:documentation>
    <element name="scenario">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_model_element"/>
          <ref name="type_named"/>
          <ref name="type_documented"/>
        </interleave>        
      </choice>
    </element>
  </define>
  <define name="entity">
    <choice>
      <ref name="thing"/>
      <ref name="event"/>
    </choice>
  </define>
  <define name="thing">
    <a:documentation>An entity that, unless subject to an event, exists permanently and unchanged within the scope of a scenario or model.</a:documentation>
    <choice>
      <ref name="person"/>      
      <ref name="organization"/>      
      <ref name="resource"/>      
      <ref name="knowledge"/>      
      <ref name="informationNeed"/>      
      <ref name="requisite"/>      
      <ref name="possession"/>      
      <ref name="contactPoint"/>      
      <ref name="relationship"/>
      <ref name="clearance"/>
      <ref name="policy"/>      
      <element name="thing">
        <choice>
          <attribute name="ref"><data type="IDREF"></data></attribute>
          <ref name="abstract_thing"/>
        </choice>
      </element>
    </choice>
  </define>
  <define name="person">
    <a:documentation>An identified human being who may act as more than one worker for one or more organizations.</a:documentation>
    <element name="person">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_thing"/>
          <element name="firstName">
            <text/>
          </element>
          <optional>
            <element name="middleName">
              <text/>
            </element>
          </optional>
          <element name="lastName">
            <text/>
          </element>
          <optional>
            <element name="photo">
              <data type="anyURI"/>
            </element>
          </optional>
          <ref name="type_located"/>
        </interleave>    
      </choice>
    </element>
  </define>
  <define name="organization">
    <a:documentation>An administrative structure that manages a set of resources in order to achieve one or more missions.</a:documentation>
    <element name="organization">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="type_named"/>
          <ref name="abstract_thing"/>
          <ref name="type_located"/>
          <optional>
            <element name="abbreviation">
                <text/>
            </element>
          </optional>
          <optional>
            <element name="logo">
              <data type="anyURI"/>
            </element>
          </optional>
          <optional>
            <element name="jurisdiction">
              <ref name="type_located"/>
            </element>
          </optional>
          <optional>
            <element name="parent">
              <ref name="organization"/>
            </element>
          </optional>
        </interleave>
      </choice>
    </element>
  </define>
  <div>
    <define name="resource">
      <choice>
        <ref name="agent"/>
        <ref name="service"/>
        <ref name="artifact"/>
      </choice>
    </define>
    <define name="service">
      <a:documentation>A service is a capability (not embodied by an agent) that can be required by an agent in order to operate and function.</a:documentation>
      <choice>
        <ref name="channel"/>
        <element name="service">
          <choice>
            <attribute name="ref"><data type="IDREF"/></attribute>
            <ref name="abstract_service"/>
          </choice>
        </element>      
      </choice>
    </define>
    <define name="channel">
      <a:documentation>An instance of a communication medium used for transmissions.</a:documentation>
      <element name="channel">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_service"/>
            <optional>
              <element name="interoperatesWith">
                <oneOrMore><ref name="channel"/></oneOrMore>
              </element>
            </optional>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="artifact">
      <a:documentation>A physical entity (but not an agent) that may be required by an agent to successfully execute a task.</a:documentation>
      <choice>
        <ref name="document"/>
        <element name="artifact">
          <choice>
            <attribute name="ref"><data type="IDREF"/></attribute>
            <ref name="abstract_artifact"/>
          </choice>
        </element>
      </choice>
    </define>
    <define name="document">
      <a:documentation>An artifact that contains information, such as a book or a printed report.</a:documentation>
      <element name="document">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_artifact"/>
            <zeroOrMore>
              <ref name="information"/>
            </zeroOrMore>
          </interleave>
        </choice>
      </element>
    </define>
  </div>
  <div>
    <define name="event">
      <a:documentation>Abstract</a:documentation>
      <choice>
        <ref name="complexEvent"/>
        <ref name="linkedEvent"/>
        <ref name="timeEvent"/>
      </choice>
    </define>
    <define name="linkedEvent">
      <a:documentation>An event which is triggered and possibly terminated by the starting or ending of events.
        Constraint: An event can be terminated by its own start, but not its own end
        Constraint: If an event is triggered by the end of an event, it can not be terminated by the start of the same event.
        Constraint: Event causality must form a directed, acyclical graph.
      </a:documentation>
      <choice>
        <ref name="task"/>
        <ref name="regulatoryEvent"/>
        <ref name="issue"/>
        <element name="linkedEvent">
          <a:documentation>Either all listed events are concurrently happening, anyone is happening, excatly one is happening, or none is happening.
            A complex event can reoccur many times during a scenario for different validations of the boolean relation (one ORed event happens, then later another etc.)</a:documentation>
          <choice>
            <attribute name="ref"><data type="IDREF"/></attribute>
            <ref name="abstract_linkedEvent"/>
          </choice>
        </element>
      </choice>
    </define>
    <define name="complexEvent">
      <a:documentation>A complex event combines a list of event via a boolean relation on an implied 'is_happening(Event)' predicate. It happens while the boolean relation holds for all listed events.</a:documentation>
      <element name="complexEvent">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <element name="op">
              <choice>
                <value>and</value>
                <value>or</value>
                <value>xor</value>
                <value>not</value>
              </choice>
            </element>
            <ref name="abstract_event">
              <a:documentation>all events are occurring, any one event is, only one is, none is</a:documentation>
            </ref>
            <oneOrMore>
              <a:documentation>The location determines the timezone in effect (different times in different locations)</a:documentation>
              <ref name="event"/>
            </oneOrMore>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="timeEvent">
      <a:documentation>The current time is within some recurring time interval.</a:documentation>
      <element name="timeEvent">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_event"/>
            <ref name="timing"/>
          </interleave>
        </choice>
      </element>
    </define>
  <define name="task">
    <a:documentation>Something is being done by one or more agents to effect or prevent some change (i.e. to start, end events or keep events from either).</a:documentation>
    <choice>
      <ref name="communication"/>
      <ref name="remediation"/>
      <ref name="transmission"/>
      <element name="task">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <ref name="abstract_task"/>
        </choice>
      </element>
    </choice>
    </define>
    <define name="communication">
      <a:documentation>A task that realizes a sharing of information from one agent to another.</a:documentation>
      <element name="communication">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_task"/>
            <ref name="information"/>
            <element name="targetAgent">
              <ref name="agent"/>
            </element>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="transmission">
      <a:documentation>Task of sending a message or batch of messages from one agent directly to another.</a:documentation>
      <element name="transmission">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_task"/>
            <oneOrMore>
              <ref name="message"/>
            </oneOrMore>
            <choice>
              <interleave>
                <ref name="channel"/>
                <ref name="contactPoint">
                  <a:documentation>channel used for sending and contact point of receiving agent</a:documentation>
                </ref>
              </interleave>
              <element name="faceToFaceWith">
                <a:documentation>or the transmission is face to face with the receiving agent</a:documentation>
                <ref name="agent"/>
              </element>
            </choice>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="remediation">
      <a:documentation>A task that aims to terminate an issue.</a:documentation>
      <element name="remediation">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_task"/>
            <ref name="issue"/>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="issue">
      <a:documentation>A problem with an entity</a:documentation>
      <element name="issue">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_linkedEvent"/>
            <ref name="entity"/>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="regulatoryEvent">
      <a:documentation>A policy is being disobeyed or obeyed by a task.</a:documentation>
      <element name="regulatoryEvent">
        <a:documentation>by default the regulatory event is about an infraction</a:documentation>
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <optional>
              <element name="isInfraction">
                <data type="boolean"/>
              </element>
            </optional>
            <ref name="abstract_linkedEvent"/>
            <ref name="policy"/>
          </interleave>
        </choice>
      </element>
    </define>
  </div>
  <div>    
    <define name="abstract_agent">
      <a:documentation>A resource that can autonomously execute a task.</a:documentation>
      <ref name="abstract_resource"/>
    </define>
    <define name="agent">
      <choice>
        <ref name="worker"/>
        <ref name="group"/>
        <ref name="team"/>
        <ref name="system"/>
      </choice>
    </define>
    <define name="worker">
      <a:documentation>A role-based position held by a person in an organization.</a:documentation>
      <element name="worker">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_agent"/>
            <optional>
              <ref name="person"/>
            </optional>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="group">
      <a:documentation>A group of functionally undistinguishable workers.</a:documentation>
      <element name="group">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_agent"/>
            <element name="count">
              <a:documentation>number of workers in group whenever available</a:documentation>
              <data type="int"/>
            </element>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="team">
      <a:documentation>A team of workers possibly from different organizations acting as a unit.    </a:documentation>
      <element name="team">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_agent"/>
            <oneOrMore><ref name="worker"/></oneOrMore>
          </interleave>
        </choice>
      </element>
    </define>
    <define name="system">
      <a:documentation>A non-human resource that can has any combination of repository, sensor and actuator capabilities.</a:documentation>
      <element name="system">
        <choice>
          <attribute name="ref"><data type="IDREF"/></attribute>
          <interleave>
            <ref name="abstract_agent"/>
            <element name="isRepository">
              <data type="boolean"/>
            </element>
            <element name="isSensor">
              <data type="boolean"/>
            </element>
            <element name="isActuator">
              <data type="boolean"/>
            </element>
          </interleave>
        </choice>
      </element>
    </define>
    </div>
  <define name="informationNeed">
    <a:documentation>Information is needed by an agent with some urgency in one of a number of formats.</a:documentation>
    <element name="informationNeed">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <ref name="agent"/>
          <ref name="information"/>
          <element name="maximumDelay">
            <a:documentation>between the earliest time of notification or since requested</a:documentation>
            <ref name="duration"/>
          </element>
          <element name="criticality">
            <ref name="level"/>
          </element>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="knowledge">
    <a:documentation>The holding of information of  by an agent. The agent has more or less confidence in the correctness of the information. Knowledge can be negated to represent absence of knowledge.</a:documentation>
    <element name="knowledge">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <optional>
            <element name="negated">
              <a:documentation>default is false</a:documentation>
              <data type="boolean"/>
            </element>
          </optional>
          <ref name="abstract_fact"/>
          <ref name="agent"/>
          <ref name="information"/>
          <optional>
            <element name="confidence">
              <a:documentation>default is 'high'</a:documentation>
              <ref name="level"/>
            </element>
          </optional>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="requisite">
    <a:documentation>An agent requires that a resource be available in order for it to be generally operational, or be capable of executing a given task.</a:documentation>
    <element name="requisite">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <ref name="agent"/>
          <element name="resource">
            <ref name="resource"/>
          </element>
          <ref name="availability"/>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="possession">
    <a:documentation>An artifact is in the possession of an agent.</a:documentation>
    <element name="possession">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <ref name="artifact"/>
          <ref name="agent"/>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="contactPoint">
    <a:documentation>Point of contact to some agent over some channel. A Point of Contact may require authentication by the agent.</a:documentation>
    <element name="contactPoint">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <choice>
            <ref name="agent"/>
            <ref name="organization"/>
          </choice>
          
          <ref name="channel"/>
          <optional>
            <element name="authenticationRequired">
              <a:documentation>default is false - - TODO: this is inadequate modeling of permissioning</a:documentation>
              <empty/>
            </element>
          </optional>
          <element name="endpoint">
            <text/>
          </element>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="clearance">
    <a:documentation>The security clearance of a person.</a:documentation>
    <element name="clearance">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <ref name="organization">
            <a:documentation>the organization that granted the clearance</a:documentation>
          </ref>
          <ref name="person">
            <a:documentation>the person who is cleared</a:documentation>
          </ref>
          <element name="terminationDate">
            <a:documentation>when it expires</a:documentation>
            <data type="date"/>
        </element>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="relationship">
    <a:documentation>A relationship, categorization and trust level, between two agents.</a:documentation>
    <element name="relationship">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <!-- taxonomy is 'person#1' -->
          <element name="fromAgent">
            <ref name="agent"/>
          </element>
          <element name="toAgent">
            <ref name="agent"/>
          </element>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="policy">
    <a:documentation>A law, mandate, directive etc. from an organization that either obligates or forbids a kind of task done somewhere by agents in any of a given set of roles.</a:documentation>
    <element name="policy">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="abstract_fact"/>
          <ref name="type_documented"/>
          <element name="authority">
            <ref name="organization"/>
          </element>
          <element name="appliesTo">
            <interleave>
              <ref name="type_located"/>
              <element name="taskSpecification">
                <ref name="specification"/>
              </element>
              <zeroOrMore>
                <ref name="role"/>
              </zeroOrMore>
            </interleave>
          </element>
          <element name="intent">
            <choice>
              <value>forbid</value>
              <value>obligate</value>
            </choice>
          </element>
        </interleave>
      </choice>
    </element>
  </define>
   <!-- - - - - - Project elements - - - - - - - - -# -->
  <define name="project">
    <a:documentation>Descriptive information for the project</a:documentation>
    <element name="project">
      <ref name="type_unique"/>
      <ref name="type_named"/>
      <ref name="type_described"/>
      <ref name="organization"/>
    </element>
  </define>
  <define name="project_element">
    <choice>
      <ref name="participant"/>
      <ref name="journalEntry"/>
      <ref name="question"/>
      <ref name="answerToQuestion"/>
    </choice>
  </define>
  <define name="participant">
    <a:documentation>A user having access to one or more models.</a:documentation>
    <element name="participant">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="type_unique"/>
          <optional>
            <element name="isAdmin">
              <a:documentation>If user is an administrator of the project. Default: false.</a:documentation>
              <data type="boolean"/>
            </element>
          </optional>
          <element name="userName">
            <text/>
          </element>
          <element name="password">
            <text/>
          </element>
          <element name="email">
            <text/>
          </element>
          <zeroOrMore>
            <element name="projectId">
              <text/>
            </element>
          </zeroOrMore>
          <optional>
            <ref name="person">
              <a:documentation>If participant is a person represented in the model</a:documentation>
            </ref>
          </optional>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="journalEntry">
    <a:documentation>A dated text with some tagged "selections" about model elements</a:documentation>
    <element name="journalEntry">
      <interleave>
        <element name="date">
          <data type="dateTime"/>
        </element>
        <element name="content">
          <text/>
        </element>
        <zeroOrMore>
          <element name="selections">
            <interleave>
              <element name="from">
                <data type="int"/>
              </element>
              <element name="to">
                <data type="int"/>
              </element>
              <ref name="model_element"/>
            </interleave>
          </element>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="question">
    <element name="question">
      <a:documentation>A question for participants usually about a model element.
        Default is "all participants"</a:documentation>
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="type_unique"/>
          <element name="about">
            <a:documentation>GUID  of unique object or element</a:documentation>
            <text/>
          </element>
          <element name="content">
            <text/>
          </element>
          <zeroOrMore>
            <ref name="participant"/>
          </zeroOrMore>
        </interleave>
      </choice>
    </element>
  </define>
  <define name="answerToQuestion">
    <a:documentation>An answer from one or more participants to a question</a:documentation>
    <element name="answerToQuestion">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
        <interleave>
          <ref name="type_unique"/>
          <ref name="question"/>
          <element name="content">
            <text/>
          </element>
          <zeroOrMore>
            <ref name="participant"/>
          </zeroOrMore>
        </interleave>
      </choice>
    </element>
  </define>
  <!-- - - - - - - Application objects - - - - - - - -->
  <define name="application_object">
    <choice>
      <ref name="analysis"/>
    </choice>
  </define> 
  
  <define name="analysis">
    <a:documentation>An analytical result about an element of the model (this is always inferred)</a:documentation>
    <element name="analysis">
      <choice>
        <attribute name="ref"><data type="IDREF"/></attribute>
      </choice>
      <interleave>
        <ref name="type_unique"/>
        <ref name="type_described"/>
        <ref name="model_element"/>
        <zeroOrMore>
          <ref name="value"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="valueGroup"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="value">
    <a:documentation>A named value</a:documentation>
    <element name="value">
      <interleave>
        <element name="name">          
          <text/>
        </element>
      </interleave>
    </element>
  </define>
  <define name="valueGroup">
    <a:documentation>A named group of values</a:documentation>
    <element name="valueGroup">
      <interleave>
        <element name="name">
          <text/>
        </element>
        <oneOrMore>
          <ref name="value"/>
        </oneOrMore>
      </interleave>
    </element>
  </define>
  
  <!-- - - - - - - Project - - - - - -# -->
  <!-- One database per project -->
  <start>
    <element name="db">
      <a:documentation>A project is a model, its elements and the project's participants.</a:documentation>
      <interleave>
        <ref name="project"/>
        <zeroOrMore>
          <ref name="project_element"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model_element"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="application_object"/>
        </zeroOrMore>
      </interleave>
    </element>
  </start>
</grammar>
