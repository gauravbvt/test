<?xml version="1.0" encoding="UTF-8"?>
<!--
  ****************************************************
  *   NetKernel Module schema: 
  *   XML Schema Generated using Trang
  *   from RelaxNG version 1.0 Schema
  *
  * see http://www.oasis-open.org/committees/relax-ng
  *******************************************************
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="module">
    <xs:complexType>
	  <xs:sequence>
		  <xs:element ref="identity"/>
		  <xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="info"/>
			<xs:element ref="publisher"/>
			<xs:element ref="licence"/>
			<xs:element ref="export"/>
			<xs:element ref="rewrite"/>
			<xs:element ref="mapping"/>
			<xs:element ref="transreptors"/>
			<xs:element ref="fragmentors"/>
			<xs:element ref="transports"/>
			<xs:element ref="cache"/>
		  </xs:choice>
	   </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    *******************************************
    * Identity
    ********************************************
  -->
  <xs:element name="identity">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="uri"/>
        <xs:element ref="version"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="version" type="xs:string"/>
  <!--
    *******************************************
    * Info
    ********************************************
  -->
  <xs:element name="info">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="name"/>
        <xs:element ref="description"/>
        <xs:element ref="type"/>
		<xs:element ref="dynamic"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="name" type="xs:string"/>
  <xs:element name="description" type="xs:string"/>
  <xs:element name="type" type="xs:string"/>
  <xs:element name="dynamic" type="xs:string"/>
  <!--
    *******************************************
    * Publisher
    ********************************************
  -->
  <xs:element name="publisher">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="name"/>
        <xs:element ref="uri"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!--
    *******************************************
    * Licence
    ********************************************
  -->
  <xs:element name="licence">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="name"/>
        <xs:element ref="uri"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!--
    *******************************************
    * Export
    ********************************************
  -->
  <xs:element name="export">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="uri">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="match"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="class">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" ref="match"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!--
    *******************************************
    * ReWrite
    ********************************************
  -->
  <xs:element name="rewrite">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="rule"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="rule">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="match"/>
        <xs:element ref="to"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="to" type="xs:string"/>
  <!--
    *******************************************
    * Mapping
    ********************************************
  -->
  <xs:element name="mapping">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="ura"/>
          <xs:element ref="this"/>
          <xs:element ref="import"/>
          <xs:element name="rewrite">
            <xs:complexType>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="match"/>
                <xs:element ref="to"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element ref="skip"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="super"/>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="import"/>
		</xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ura">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="match"/>
        <xs:element name="class" type="xs:string"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="this">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="match"/>
        <xs:element ref="expiry"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="expiry">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="match"/>
        <xs:element ref="offset"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="offset" type="xs:string"/>
  <xs:element name="import">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="uri"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="version-min"/>
          <xs:element ref="version-max"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="version-min" type="xs:string"/>
  <xs:element name="version-max" type="xs:string"/>
  <xs:element name="skip">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="match"/>
        <xs:element ref="count"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="count" type="xs:string"/>
  <xs:element name="super">
    <xs:complexType/>
  </xs:element>
  <!--
    *******************************************
    * Transreptors
    ********************************************
  -->
  <xs:element name="transreptors">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="transreptor"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="transreptor" type="xs:string"/>
  <!--
    *******************************************
    * Fragmentors
    ********************************************
  -->
  <xs:element name="fragmentors">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="fragmentor"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="fragmentor" type="xs:string"/>
  <!--
    *******************************************
    * Transports
    ********************************************
  -->
  <xs:element name="transports">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="transport"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="transport" type="xs:string"/>
  <xs:group name="freeform">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <!--
    *******************************************
    * Cache
    ********************************************
  -->
  <xs:element name="cache" type="xs:string"/>
  <!--
    *******************************************
    * URI
    ********************************************
  -->
  <xs:element name="uri" type="xs:string"/>
  <!--
    *******************************************
    * Match
    ********************************************
  -->
  <xs:element name="match" type="xs:string"/>
</xs:schema>
