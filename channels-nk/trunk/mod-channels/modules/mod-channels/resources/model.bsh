import org.ten60.netkernel.layer1.representation.*;
import org.ten60.netkernel.xml.representation.*;
import com.ten60.netkernel.urii.aspect.*;
import java.util.*;

main() {
	
	out = null;
	
	if(context.exists("this:param:param")) {
		params = (IAspectNVP) context.sourceAspect("this:param:param", IAspectNVP.class);
		query=params.getValue("query");
		
		if(query != null) {
			queryScript = "ffcpl:/resources/queries/" + query + ".xq";
			generateQueryProperties(params);
			variables = new StringAspect(generateQueryProperties(params));

			try {
				req=context.createSubRequest("active:channels_data_queryModel");
				req.addArgument("xquery", queryScript);
				req.addArgument("variables", variables);
				out=context.issueSubRequest(req);
			} catch(Exception e) {
				out = new StringAspect("<error>Unable to process query: " + query 
					+ "." + e.getMessage() + "</error>");
				e.printStackTrace();
			}
		}

	} else {
		out = new StringAspect("<error>Expecting parameters but didn't get any in model.bsh</error>");
	}
	
  	response = context.createResponseFrom(out);
  	response.setMimeType("text/xml");
  	context.setResponse(response);
}

generateQueryProperties(params) {
	sb=new StringBuffer("<properties>");
	s=params.getNames();
	s.remove("query");
	i=s.iterator();
	while(i.hasNext()) {
		sb.append("<property><key>");
		key=i.next();
		sb.append(key);
		sb.append("</key><value>");
		sb.append(params.getValue(key));
		sb.append("</value></property>");
	}
	sb.append("</properties>");
	return sb.toString();
}