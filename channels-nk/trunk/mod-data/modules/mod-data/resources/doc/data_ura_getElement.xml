<?xml version="1.0" encoding="UTF-8"?>

<document>
	<title>channels_data_getElement</title>
	<!--***************Cascading Style Sheets***************-->
	<csslist>
		<css>/xlib/styles/css_ten60_lnf.css</css>
		<css>/xlib/styles/xmlverbatim.css</css>
	</csslist>
	<!--***************Links***************-->
	<links>
	</links>
	<!--***************Table of Contents***************-->
	<toc>
		<section name="title"/>
		<section name="definition"/>
		<section name="purpose"/>
	</toc>
	
	<section name="title" styleuri="/xusr/share/doc/styles_1060/style_title.xsl">
		<content>
			<name>channels_data_getElement</name>
			<text>Accessor to get an element from the opened model</text>
		</content>
	</section>
	
	<section name="definition" styleuri="/xusr/share/doc/styles_1060/style_definition.xsl">
		<content>
			<module>urn:com:mindalliance:channels:data</module>
			<format>
				<sub name="format"/>
			</format>
			<returns>
				<b>t</b>
			</returns>
			<syntax>
				<type><b>channels_data_getElement</b></type>
				<id req="true">the element's id</id>
        <namesListed req="false">a canonical boolean</namesListed>
				<target req="false">the element as xml</target>
			</syntax>
		</content>
		<includes>
			<include name="format" type="xml">
		    <instr>
		      <type>channels_data_getElement</type>
		      <id>1230980875AD45A6BC</id>
          <namesListed><b>t</b></namesListed>
		      <target>this:response</target>
		    </instr>
			</include>
		</includes>
	</section>
	
	<section name="purpose" styleuri="/xusr/share/doc/styles_1060/style_basic.xsl">
		<content>
	    <p>
				The <code>channels_data_getElement</code> accessor retrieves the element with the given unique id from the currently opened model,
        otherwise an exception is thrown.
			</p>
			<p>If successful the response is an element as xml such as:</p>
      <sub name="element"/>
      <p>
        If the argument <code>namesListed</code> is set to any value then lists of references to other elements
        are augmented by the names of the referenced elements. For example, the following would be returned (notice that the 
        roleId elements have been added a name attribute):
        <sub name="named"/>
        The elements to be augmented this way are identified as follows:
        <ol>
          <li>
            From the RelaxNG schema of the element (their definitions are contained in &lt;zeroOrMore&gt;)
          </li>
          <li>and their names end with "Id"</li>
        </ol>
      </p>
		</content>
		<includes>
			<include name="element" type="xml">
        <project schema="ffcpl:/resources/schemas/project.rng">
        	<id>878AD470F6C983655BEE25411</id>
          <name>My project</name>
        </project>
      </include>
      <include name="named" type="xml">
        <person schema="http://localhost:8080/channels/schema/person.rng">
					<id>977CE769B23B19C5BCC0131E9DF51C3D</id>
					<name>JD</name>
					<firstName> John </firstName>
					<lastName>Doe</lastName>
					<email>jd@mail.net</email>
					<roles>
						<roleId name="Role 1">21F58D2A810CA0A89B8B39DC6EBBE72D</roleId>
						<roleId name="Role 2">F614956CE87003778ACBB8EA1B330577</roleId>
					</roles>
				</person>
      </include>
		</includes>
	</section>
</document>