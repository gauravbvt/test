<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <bean id="semanticMatcher" class="com.mindalliance.channels.nlp.WordnetSemanticMatcher">
        <property name="wordnetDict" value="WEB-INF/data/wordnet-2/dict"/>
        <property name="simIndex" value="WEB-INF/data/jwsl/wn_index"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="username" value="channels.mindalliance@gmail.com"/>
        <property name="password" value="trafalg4r"/>
        <property name="port" value="465"/>
        <property name="protocol" value="smtps"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtps.auth">true</prop>
                <prop key="mail.smtps.starttls.enable">true</prop>
                <prop key="mail.smtps.debug">true</prop>
            </props>
        </property>
    </bean>

    <bean id="imagingService" class="com.mindalliance.channels.imaging.DefaultImagingService">
        <property name="attachmentManager" ref="attachmentManager"/>
        <property name="iconDirectory" value="file:${user.home}/channels/icons"/>
        <property name="iconPath" value="icons/"/>
    </bean>

    <bean id="queryService" class="com.mindalliance.channels.query.DefaultQueryService">
        <constructor-arg ref="planManager"/>
        <constructor-arg ref="attachmentManager"/>
        <property name="semanticMatcher" ref="semanticMatcher"/>
        <property name="imagingService" ref="imagingService"/>
        <property name="userDetailsService" ref="userDetails"/>
    </bean>

    <bean id="serializer" class="com.mindalliance.channels.export.xml.XmlStreamer">
        <constructor-arg ref="idGenerator"/>
        <property name="version" value="1.0"/>
    </bean>

    <bean id="attachmentManager" class="com.mindalliance.channels.attachments.FileBasedManager">
        <property name="uploadPath" value="uploads/"/>
        <property name="planManager" ref="planManager"/>
    </bean>

    <bean id="geoService" class="com.mindalliance.channels.geo.DefaultGeoService">
        <property name="googleMapsAPIKey"
                  value="ABQIAAAAOEFNCNhUR4YjTHX0nnN5VRR4EqRj3RNZnoYuzojShxUjcPQKRRSLJekGZYEI4kGxmTTJBHr4EJ6Xpg"/>
        <property name="geonamesServer" value="ws.geonames.net"/>
        <property name="geonamesUserName" value="mindalliance"/>
        <property name="geonamesToken" value="trafalg4r"/>
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=file
                file.resource.loader.class=org.apache.velocity.runtime.resource.loader.FileResourceLoader
                file.resource.loader.path=${user.home}/channels/templates
                file.resource.loader.cache=true
                file.resource.loader.modificationCheckInterval=2
            </value>
        </property>
    </bean>

    <bean id="surveyService" class="com.mindalliance.channels.surveys.SurveyGizmoService">
        <property name="apiKey" value="f244197f935b14559b8061cea"/>
        <property name="userKey" value="vxvnv4nys*29"/>
        <property name="template" value="1800"/>
        <property name="analyst" ref="analyst"/>
        <property name="queryService" ref="queryService"/>
        <property name="defaultEmailAddress" value="channels.mindalliance@gmail.com"/>
        <property name="mailSender" ref="mailSender"/>
        <property name="userDetailsService" ref="userDetails"/>
        <property name="velocityEngine" ref="velocityEngine"/>
        <property name="surveysFile" value="surveys"/>
        <property name="planManager" ref="planManager"/>
        <property name="templatesDir" value="${user.home}/channels/templates"/>
        <property name="templatesSource" value="WEB-INF/templates"/>
    </bean>

    <bean id="idGenerator" class="com.mindalliance.channels.dao.PerPlanIdGenerator"/>

    <!--<bean id="idGenerator" class="com.mindalliance.channels.dao.SimpleIdGenerator"/>-->

    <!-- setup wicket application -->
    <bean id="wicketApplication" class="com.mindalliance.channels.Channels">
        <property name="geoService" ref="geoService"/>
        <property name="importExportFactory" ref="serializer"/>
        <property name="analyst" ref="analyst"/>
        <property name="queryService" ref="queryService"/>
    </bean>

    <!-- Flow diagram factory : a prototype -->
    <bean id="diagramFactory" class="com.mindalliance.channels.graph.DefaultDiagramFactory" scope="prototype">
        <property name="graphRenderer" ref="graphvizRenderer"/>
        <property name="imageDirectory" value="WEB-INF/images"/>
        <property name="queryService" ref="queryService"/>
    </bean>

    <bean id="graphvizRenderer" class="com.mindalliance.channels.graph.GraphvizRenderer">
        <property name="dotPath" value="/usr/bin"/>
        <property name="algo" value="dot"/>
        <property name="timeout" value="10000"/>
    </bean>

    <bean id="issueScanner" class="com.mindalliance.channels.analysis.IssueScanner">
        <property name="planManager" ref="planManager"/>
        <property name="queryService" ref="queryService"/>
        <property name="analyst" ref="analyst"/>
    </bean>

    <bean id="detective" class="com.mindalliance.channels.analysis.DefaultDetective">
        <property name="issueDetectors">
            <list value-type="java.util.ArrayList">
                <bean class="com.mindalliance.channels.analysis.detectors.FromUser">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.NoSegmentRepondsToIncident">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SegmentWithoutManagedRisk">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.StartedOrTerminatedPartWithoutTask">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PartWithoutRole">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PartWithActorOrRoleButNoOrganization">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowWithoutChannel">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.InvalidChannel">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnnamedFlow">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowWithUndefinedSource">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowWithUndefinedTarget">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PartWithInvalidTiming">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.OrphanedPart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.RedundantPart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.RedundantFlow">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnconnectedConnector">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowViolatesPolicy">
                    <property name="attachmentManager" ref="attachmentManager"/>
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnconfirmedJob">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowToSelf">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.GeonameButNoLocation">
                    <property name="geoService" ref="geoService"/>
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PartWithRoleWithNoKnownActor">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SegmentNeverEnds">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.TriggeredButNeverStartedDefinedTask">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.NeverTriggeredSpecifiedTask">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.AutoStartPartAlsoTriggered">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SegmentEventNeverCaused">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SegmentNeverStarts">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.CyclicTriggering">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.NoRedundancy">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PotentialDeadlock">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.ActorNotInOneOrganization">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SegmentWithSameRisk">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UselessPart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnverifiedPostalCode">
                    <property name="geoService" ref="geoService"/>
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PlaceInheritsDifferentPostalCode">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PlaceInheritsDifferentStreetAddress">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PlaceContainedInSelf">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.RedundantPlace">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.EmptyNeedOrCapability">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnsatisfiedNeed">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.PersonInSystemRole">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.CommitmentWithoutRequiredAgreement">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UntimelyTriggeringSharing">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UntimelyCriticalSharing">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.InconsistentImpactOnTargetPart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.InconsistentImpactOnSourcePart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SinglePointOfFailure">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UserIsManyActors">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.NoSegmentForEventPhase">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UnplayedPart">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.UselessActor">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.InvalidEntityTyping">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.FlowDeclassifies">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.SharingWithoutCommitments">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.InsufficientClearance">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.AgreementWithoutCommitment">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.AgreementEncompassedByOther">
                    <property name="queryService" ref="queryService"/>
                </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.CommittmentWithoutRequiredUnicastChannel">
                     <property name="queryService" ref="queryService"/>
                 </bean>
                <bean class="com.mindalliance.channels.analysis.detectors.CommittmentOverUnsecuredChannel">
                     <property name="queryService" ref="queryService"/>
                 </bean>
            </list>
        </property>
    </bean>

    <!-- Analyst -->
    <bean id="analyst" class="com.mindalliance.channels.analysis.DefaultAnalyst"
          init-method="start" destroy-method="stop">
        <property name="queryService" ref="queryService"/>
        <property name="detective" ref="detective"/>
    </bean>

    <!-- Lock manager -->
    <bean id="lockManager" class="com.mindalliance.channels.command.DefaultLockManager" scope="prototype">
        <property name="queryService" ref="queryService"/>
    </bean>

    <!-- Commander -->
    <bean id="commander" class="com.mindalliance.channels.command.DefaultCommander" scope="prototype">
        <property name="timeout" value="300"/>
        <property name="queryService" ref="queryService"/>
        <property name="analyst" ref="analyst"/>
        <property name="lockManager" ref="lockManager"/>
    </bean>

</beans>
